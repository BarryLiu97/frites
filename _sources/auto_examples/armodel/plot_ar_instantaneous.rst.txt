.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_armodel_plot_ar_instantaneous.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_armodel_plot_ar_instantaneous.py:


AR : simulate common driving input
==================================

This example illustrates an autoregressive model that simulates a common
driving input (i.e X->Y and X->Z) and how it is measured using the covariance
based Granger Causality


.. code-block:: default

    import numpy as np

    from frites.simulations import StimSpecAR
    from frites.conn import conn_covgc

    import matplotlib.pyplot as plt








Simulate 3 nodes 40hz oscillations
----------------------------------

Here, we use the class :class:`frites.simulations.StimSpecAR` to simulate an
stimulus-specific autoregressive model made of three nodes (X, Y and Z). This
network simulates a transfer X->Y and X->Z. X is then called a common driving
input for Y and Z


.. code-block:: default



    ar_type = 'osc_40_3'  # 40hz oscillations
    n_stim = 3          # number of stimulus
    n_epochs = 50       # number of epochs per stimulus

    ss = StimSpecAR()
    ar = ss.fit(ar_type=ar_type, n_epochs=n_epochs, n_stim=n_stim)
    print(ar)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (trials: 150, roi: 3, times: 300)>
    array([[[-3.09936520e-01,  3.01441498e-02,  8.09848882e-02, ...,
             -7.60910028e-01, -3.36637676e-01,  2.63098555e-01],
            [-1.34440632e-01,  2.48103449e-01,  1.04589553e-01, ...,
             -1.71478826e-01, -1.87327297e-01,  4.49559681e-02],
            [-1.42554268e-01,  2.69215959e-01,  2.96308554e-01, ...,
             -3.07823885e-01, -2.93902113e-01,  1.12894760e-01]],

           [[-5.12163477e-01, -1.59158880e-01,  5.02065599e-01, ...,
             -6.78145992e-01, -2.07430669e-01,  3.63762923e-01],
            [ 8.97838407e-02,  1.91212657e-02,  1.03145996e-01, ...,
             -3.80304131e-02, -2.65362872e-01, -2.15214192e-01],
            [-1.25152048e-01, -1.78976420e-01,  1.59302331e-01, ...,
             -1.11938395e-01,  9.65724781e-03,  1.64390889e-01]],

           [[ 4.26653204e-01,  1.81056562e-01,  1.35881101e-01, ...,
              1.76813244e-01,  3.78324941e-01, -3.33836563e-01],
            [-3.42832881e-01, -3.30319222e-01,  5.97558940e-02, ...,
             -2.61992594e-01,  1.51565613e-01,  2.96993943e-01],
            [ 1.05705707e-01,  1.36040689e-01,  2.46647027e-01, ...,
              1.58717169e-01,  1.28578082e-01,  2.71591569e-01]],
    ...
           [[ 3.86949860e-01,  2.50388677e-01, -1.23285620e-01, ...,
              9.12133037e-01,  7.04217699e-01, -2.29862339e-01],
            [-1.41039468e-01,  8.89759362e-02,  3.48555393e-01, ...,
              2.52644964e-02, -3.42822173e-02, -1.54214697e-01],
            [-3.84717068e-01,  1.54642101e-01,  4.56433167e-01, ...,
             -3.36652131e-01, -1.13619035e-01, -1.17871604e-01]],

           [[-5.01095966e-02, -7.21646246e-02, -7.24206655e-02, ...,
             -2.18427844e-01, -4.26580100e-01, -2.16673413e-01],
            [-2.06076212e-01, -1.36729092e-01,  2.36524615e-03, ...,
             -9.56277066e-02,  1.06877088e-01,  2.32598692e-02],
            [-9.14650112e-02, -1.45999923e-02, -5.79295031e-01, ...,
             -4.03898189e-02, -2.42518457e-02,  2.63585455e-01]],

           [[-5.48222946e-03, -1.40034623e-01, -1.11339198e-01, ...,
             -1.44082246e-01,  2.59657088e-02,  4.53929177e-03],
            [ 1.53235126e-01,  2.14599394e-01,  5.38940671e-02, ...,
              4.35886129e-01,  4.45603876e-01, -3.15377661e-02],
            [-2.20057896e-01,  6.72832835e-02,  1.06800104e-01, ...,
              3.32377999e-01, -1.53290463e-04, -1.70131393e-01]]])
    Coordinates:
      * trials   (trials) int64 1 1 1 1 1 1 1 1 1 1 1 1 ... 3 3 3 3 3 3 3 3 3 3 3 3
      * roi      (roi) <U1 'x' 'y' 'z'
      * times    (times) float64 -0.5 -0.495 -0.49 -0.485 ... 0.98 0.985 0.99 0.995
    Attributes:
        n_stim:    3
        n_std:     3
        ar_type:   osc_40_3
        stimulus:  [1 2 3]



plot the network


.. code-block:: default


    plt.figure(figsize=(5, 4))
    ss.plot_model()
    plt.show()




.. image:: /auto_examples/armodel/images/sphx_glr_plot_ar_instantaneous_001.png
    :class: sphx-glr-single-img




plot the data


.. code-block:: default


    plt.figure(figsize=(7, 8))
    ss.plot(cmap='bwr')
    plt.tight_layout()
    plt.show()




.. image:: /auto_examples/armodel/images/sphx_glr_plot_ar_instantaneous_002.png
    :class: sphx-glr-single-img




plot the power spectrum density (PSD)


.. code-block:: default


    plt.figure(figsize=(7, 8))
    ss.plot(cmap='Reds', psd=True)
    plt.tight_layout()
    plt.show()





.. image:: /auto_examples/armodel/images/sphx_glr_plot_ar_instantaneous_003.png
    :class: sphx-glr-single-img




Compute the Granger-Causality
-----------------------------

We then compute and plot the Granger Causality. From the plot you can see
that there's indeed an information transfer from X->Y and X->Z and, in
addition, an instantaneous connectivity between Y.Z


.. code-block:: default


    dt = 50
    lag = 5
    step = 2
    t0 = np.arange(lag, ar.shape[-1] - dt, step)
    gc = conn_covgc(ar, roi='roi', times='times', dt=dt, lag=lag, t0=t0,
                    n_jobs=-1)[0]

    # sphinx_gallery_thumbnail_number = 4
    plt.figure(figsize=(12, 10))
    ss.plot_covgc(gc)
    plt.tight_layout()
    plt.show()



.. image:: /auto_examples/armodel/images/sphx_glr_plot_ar_instantaneous_004.png
    :class: sphx-glr-single-img





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  10.376 seconds)


.. _sphx_glr_download_auto_examples_armodel_plot_ar_instantaneous.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_ar_instantaneous.py <plot_ar_instantaneous.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_ar_instantaneous.ipynb <plot_ar_instantaneous.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
