.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_armodel_plot_ar_instantaneous.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_armodel_plot_ar_instantaneous.py:


AR : simulate common driving input
==================================

This example illustrates an autoregressive model that simulates a common
driving input (i.e X->Y and X->Z) and how it is measured using the covariance
based Granger Causality


.. code-block:: default

    import numpy as np

    from frites.simulations import StimSpecAR
    from frites.conn import conn_covgc

    import matplotlib.pyplot as plt








Simulate 3 nodes 40hz oscillations
----------------------------------

Here, we use the class :class:`frites.simulations.StimSpecAR` to simulate an
stimulus-specific autoregressive model made of three nodes (X, Y and Z). This
network simulates a transfer X->Y and X->Z. X is then called a common driving
input for Y and Z


.. code-block:: default



    ar_type = 'osc_40_3'  # 40hz oscillations
    n_stim = 3          # number of stimulus
    n_epochs = 50       # number of epochs per stimulus

    ss = StimSpecAR()
    ar = ss.fit(ar_type=ar_type, n_epochs=n_epochs, n_stim=n_stim)
    print(ar)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (trials: 150, roi: 3, times: 300)>
    array([[[ 1.14501604e-01, -2.30650543e-03,  5.34549231e-04, ...,
              3.83668512e-03, -2.27714300e-01,  9.76793194e-02],
            [-1.30255239e-01, -2.17704757e-01,  2.86030907e-01, ...,
              2.12633987e-02, -2.06535313e-01,  1.58553106e-01],
            [ 1.90050907e-01, -3.18312211e-02,  2.64628882e-01, ...,
             -2.46370209e-01,  1.02345467e-01,  3.99318417e-01]],

           [[-1.02423506e-01,  3.79114368e-04, -4.62528066e-02, ...,
             -4.18447816e-01,  8.65486870e-02,  3.05404866e-01],
            [-1.54756327e-01,  1.85120752e-02,  4.10298155e-01, ...,
              2.00303479e-02,  2.72610502e-01,  2.48541101e-02],
            [-6.34841285e-02, -1.11185170e-01, -7.25291627e-02, ...,
             -6.65428386e-01,  1.44658989e-03,  5.76608752e-01]],

           [[-2.17269329e-01,  2.61731766e-01,  1.26963591e-01, ...,
              4.23517399e-01,  3.82020645e-01,  3.08264122e-01],
            [ 1.45691012e-01,  4.88094748e-01,  1.60254482e-02, ...,
              1.03186749e-02, -2.06350348e-01, -7.59940927e-02],
            [-1.25857611e-01,  5.46920838e-02,  3.71423953e-02, ...,
              2.96625774e-01,  1.00018597e-01, -7.29219753e-02]],
    ...
           [[ 6.78626909e-02, -1.35730984e-01,  7.12463379e-02, ...,
             -5.03886111e-01,  3.52050811e-01,  5.68940024e-01],
            [ 1.50358013e-01,  1.61712124e-01,  3.14957934e-01, ...,
              1.87371606e-01,  1.78611552e-01, -5.53650074e-02],
            [-3.35293424e-02,  4.03298445e-02,  1.84626626e-01, ...,
              9.28421521e-02,  2.06846774e-01, -2.64846889e-02]],

           [[ 9.43729870e-02,  2.75461816e-01, -8.22273187e-01, ...,
             -1.48208995e-02,  1.00148105e-01, -1.17657047e-02],
            [ 3.61759012e-01,  3.47568541e-02,  5.61035247e-02, ...,
              2.21173523e-02,  3.62599084e-01, -2.82869375e-02],
            [-2.94594760e-01, -2.15948879e-01, -9.52033287e-02, ...,
              4.55045313e-02,  1.49633453e-01, -2.31458187e-01]],

           [[-2.52090219e-01, -2.79305707e-01, -5.57799084e-02, ...,
             -3.65188786e-01, -1.87686822e-01, -7.44488572e-03],
            [ 5.74424169e-01,  1.21881777e-01,  1.75602581e-01, ...,
              1.65514979e-01, -4.98730945e-02,  1.40917648e-01],
            [-3.14384371e-01,  4.21499127e-01,  2.64905872e-01, ...,
             -3.05057708e-01, -2.70874472e-02, -4.48172514e-02]]])
    Coordinates:
      * trials   (trials) int64 1 1 1 1 1 1 1 1 1 1 1 1 ... 3 3 3 3 3 3 3 3 3 3 3 3
      * roi      (roi) <U1 'x' 'y' 'z'
      * times    (times) float64 -0.5 -0.495 -0.49 -0.485 ... 0.98 0.985 0.99 0.995
    Attributes:
        n_stim:    3
        n_std:     3
        ar_type:   osc_40_3
        stimulus:  [1 2 3]



plot the network


.. code-block:: default


    plt.figure(figsize=(5, 4))
    ss.plot_model()
    plt.show()




.. image:: /auto_examples/armodel/images/sphx_glr_plot_ar_instantaneous_001.png
    :class: sphx-glr-single-img




plot the data


.. code-block:: default


    plt.figure(figsize=(7, 8))
    ss.plot(cmap='bwr')
    plt.tight_layout()
    plt.show()




.. image:: /auto_examples/armodel/images/sphx_glr_plot_ar_instantaneous_002.png
    :class: sphx-glr-single-img




plot the power spectrum density (PSD)


.. code-block:: default


    plt.figure(figsize=(7, 8))
    ss.plot(cmap='Reds', psd=True)
    plt.tight_layout()
    plt.show()





.. image:: /auto_examples/armodel/images/sphx_glr_plot_ar_instantaneous_003.png
    :class: sphx-glr-single-img




Compute the Granger-Causality
-----------------------------

We then compute and plot the Granger Causality. From the plot you can see
that there's indeed an information transfer from X->Y and X->Z and, in
addition, an instantaneous connectivity between Y.Z


.. code-block:: default


    dt = 50
    lag = 5
    step = 2
    t0 = np.arange(lag, ar.shape[-1] - dt, step)
    gc = conn_covgc(ar, roi='roi', times='times', dt=dt, lag=lag, t0=t0,
                    n_jobs=-1)

    # sphinx_gallery_thumbnail_number = 4
    plt.figure(figsize=(12, 10))
    ss.plot_covgc(gc)
    plt.tight_layout()
    plt.show()



.. image:: /auto_examples/armodel/images/sphx_glr_plot_ar_instantaneous_004.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

      0%|          |  : 0/3 [00:00<?,       ?it/s]    100%|##########|  : 3/3 [00:00<00:00, 4416.61it/s]




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  12.070 seconds)


.. _sphx_glr_download_auto_examples_armodel_plot_ar_instantaneous.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_ar_instantaneous.py <plot_ar_instantaneous.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_ar_instantaneous.ipynb <plot_ar_instantaneous.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
