.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_armodel_plot_ar_instantaneous.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_armodel_plot_ar_instantaneous.py:


AR : simulate common driving input
==================================

This example illustrates an autoregressive model that simulates a common
driving input (i.e X->Y and X->Z) and how it is measured using the covariance
based Granger Causality


.. code-block:: default

    import numpy as np

    from frites.simulations import StimSpecAR
    from frites.conn import conn_covgc

    import matplotlib.pyplot as plt








Simulate 3 nodes 40hz oscillations
----------------------------------

Here, we use the class :class:`frites.simulations.StimSpecAR` to simulate an
stimulus-specific autoregressive model made of three nodes (X, Y and Z). This
network simulates a transfer X->Y and X->Z. X is then called a common driving
input for Y and Z


.. code-block:: default



    ar_type = 'osc_40_3'  # 40hz oscillations
    n_stim = 3          # number of stimulus
    n_epochs = 50       # number of epochs per stimulus

    ss = StimSpecAR()
    ar = ss.fit(ar_type=ar_type, n_epochs=n_epochs, n_stim=n_stim)
    print(ar)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (trials: 150, roi: 3, times: 300)>
    array([[[ 2.69539938e-01, -7.44781085e-02,  1.63644976e-01, ...,
             -5.75402463e-02,  6.21993674e-01,  7.83738809e-01],
            [-6.28879812e-02, -2.14997599e-01, -1.23359408e-01, ...,
              1.73144906e-01,  1.07386595e-01,  1.96742548e-01],
            [ 2.05054913e-01,  4.98490797e-01, -1.40362357e-01, ...,
              9.53619609e-02, -1.36951687e-01, -1.53639140e-01]],

           [[ 1.01329296e-01,  4.81765950e-01,  1.82695780e-01, ...,
              2.47333010e-01, -1.49180550e-01, -2.23145163e-01],
            [-4.01307310e-01,  4.33920577e-01,  4.53877325e-01, ...,
             -1.78777697e-01,  4.55133356e-02, -1.54684474e-02],
            [ 4.45235568e-01,  1.33298607e-02, -3.98230331e-01, ...,
              9.67444760e-02,  3.28159716e-01,  1.10355371e-01]],

           [[ 6.64169688e-02,  1.89555785e-01,  2.76341211e-02, ...,
             -1.73587292e-01, -4.19985236e-01, -3.10853379e-01],
            [-2.90288626e-01,  8.67531376e-02, -8.14781598e-02, ...,
             -2.28633639e-01,  1.77079824e-01,  1.26880386e-01],
            [ 9.96502727e-02, -4.81162752e-01, -2.26036661e-01, ...,
             -3.00377369e-01, -2.36810207e-01, -3.37718071e-01]],
    ...
           [[-1.97942439e-01,  1.04696936e-01, -4.16901261e-04, ...,
             -1.87810831e-03,  4.22483021e-01,  7.17241106e-01],
            [-9.13572469e-03, -1.40856296e-01,  3.64621762e-01, ...,
              4.32985332e-01,  6.01770169e-01, -2.82738938e-01],
            [-4.57652030e-02,  1.93362873e-01,  1.83035043e-01, ...,
             -6.86515150e-02, -6.93820113e-03,  7.26048847e-03]],

           [[-1.09520749e-01, -2.11933233e-01,  6.40091209e-02, ...,
              6.86190210e-02,  3.39393689e-01, -1.25009389e-01],
            [-1.80334089e-01,  4.97433585e-01,  9.49002708e-02, ...,
              1.02699891e-01,  2.85731879e-01, -2.08080052e-01],
            [ 2.16411223e-01, -9.97590295e-02, -1.72182689e-01, ...,
              1.20590890e-01,  6.20509340e-01, -6.40593161e-02]],

           [[ 1.08836122e-01,  2.35421378e-01, -1.26273875e-02, ...,
              1.89797299e-01, -3.32231734e-01, -7.87511822e-01],
            [-2.00673721e-02,  2.32982949e-01,  2.94515305e-01, ...,
             -8.58870685e-02, -1.74758759e-01,  3.54359420e-02],
            [ 2.18275190e-01, -7.82029046e-02, -4.06055905e-01, ...,
              5.54021659e-01,  7.43462775e-02, -3.69135727e-01]]])
    Coordinates:
      * trials   (trials) int64 1 1 1 1 1 1 1 1 1 1 1 1 ... 3 3 3 3 3 3 3 3 3 3 3 3
      * roi      (roi) <U1 'x' 'y' 'z'
      * times    (times) float64 -0.5 -0.495 -0.49 -0.485 ... 0.98 0.985 0.99 0.995
    Attributes:
        n_stim:    3
        n_std:     3
        ar_type:   osc_40_3
        stimulus:  [1 2 3]



plot the network


.. code-block:: default


    plt.figure(figsize=(5, 4))
    ss.plot_model()
    plt.show()




.. image:: /auto_examples/armodel/images/sphx_glr_plot_ar_instantaneous_001.png
    :class: sphx-glr-single-img




plot the data


.. code-block:: default


    plt.figure(figsize=(7, 8))
    ss.plot(cmap='bwr')
    plt.tight_layout()
    plt.show()




.. image:: /auto_examples/armodel/images/sphx_glr_plot_ar_instantaneous_002.png
    :class: sphx-glr-single-img




plot the power spectrum density (PSD)


.. code-block:: default


    plt.figure(figsize=(7, 8))
    ss.plot(cmap='Reds', psd=True)
    plt.tight_layout()
    plt.show()





.. image:: /auto_examples/armodel/images/sphx_glr_plot_ar_instantaneous_003.png
    :class: sphx-glr-single-img




Compute the Granger-Causality
-----------------------------

We then compute and plot the Granger Causality. From the plot you can see
that there's indeed an information transfer from X->Y and X->Z and, in
addition, an instantaneous connectivity between Y.Z


.. code-block:: default


    dt = 50
    lag = 5
    step = 2
    t0 = np.arange(lag, ar.shape[-1] - dt, step)
    gc = conn_covgc(ar, roi='roi', times='times', dt=dt, lag=lag, t0=t0,
                    n_jobs=-1)[0]

    # sphinx_gallery_thumbnail_number = 4
    plt.figure(figsize=(12, 10))
    ss.plot_covgc(gc)
    plt.tight_layout()
    plt.show()



.. image:: /auto_examples/armodel/images/sphx_glr_plot_ar_instantaneous_004.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

      0%|          |  : 0/3 [00:00<?,       ?it/s]    100%|##########|  : 3/3 [00:00<00:00, 4709.17it/s]




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  10.832 seconds)


.. _sphx_glr_download_auto_examples_armodel_plot_ar_instantaneous.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_ar_instantaneous.py <plot_ar_instantaneous.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_ar_instantaneous.ipynb <plot_ar_instantaneous.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
