.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_armodel_plot_ar_instantaneous.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_armodel_plot_ar_instantaneous.py:


AR : simulate common driving input
==================================

This example illustrates an autoregressive model that simulates a common
driving input (i.e X->Y and X->Z) and how it is measured using the covariance
based Granger Causality


.. code-block:: default

    import numpy as np

    from frites.simulations import StimSpecAR
    from frites.conn import conn_covgc

    import matplotlib.pyplot as plt








Simulate 3 nodes 40hz oscillations
----------------------------------

Here, we use the class :class:`frites.simulations.StimSpecAR` to simulate an
stimulus-specific autoregressive model made of three nodes (X, Y and Z). This
network simulates a transfer X->Y and X->Z. X is then called a common driving
input for Y and Z


.. code-block:: default



    ar_type = 'osc_40_3'  # 40hz oscillations
    n_stim = 3          # number of stimulus
    n_epochs = 50       # number of epochs per stimulus

    ss = StimSpecAR()
    ar = ss.fit(ar_type=ar_type, n_epochs=n_epochs, n_stim=n_stim)
    print(ar)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (trials: 150, roi: 3, times: 300)>
    array([[[-1.04816411e-02, -2.72365429e-01, -2.07829118e-01, ...,
             -8.29109521e-02, -3.04845678e-01,  1.81795258e-01],
            [ 2.24339065e-02, -3.93254194e-01, -1.32598921e-01, ...,
             -6.59012909e-02, -1.68031072e-01, -2.32367859e-01],
            [ 2.16898208e-01,  1.19445236e-01, -4.00995666e-02, ...,
              1.59616397e-01,  6.35620653e-02,  1.92855671e-02]],

           [[-2.00486628e-02, -1.49072628e-02,  1.01715293e-01, ...,
             -5.39283666e-01, -1.14188921e-01,  4.35552087e-01],
            [-2.77529239e-01, -5.30191386e-04,  8.89446089e-02, ...,
              3.30924805e-01, -1.38117327e-01, -3.25277001e-01],
            [-3.91469186e-01, -9.65166695e-02, -2.71467765e-01, ...,
              1.37074576e-01,  6.08783156e-01,  1.67180876e-01]],

           [[-1.37209130e-01, -6.54527418e-02, -3.12681104e-02, ...,
             -6.36767369e-01,  1.41664933e-01,  6.46287301e-01],
            [-6.59745699e-02, -3.09882586e-01, -2.59548985e-01, ...,
              2.42039834e-01,  1.36336704e-01, -2.38290848e-02],
            [-2.34658293e-01,  1.79025725e-01,  2.63268045e-01, ...,
             -2.77734143e-01, -1.82070836e-01, -2.64962199e-01]],
    ...
           [[-6.63477164e-02,  3.07991956e-01,  2.69826318e-01, ...,
             -3.33339717e-01, -3.30303156e-01, -3.17457075e-01],
            [ 2.02344337e-01,  3.39094239e-02, -4.89017041e-01, ...,
             -2.81180044e-01, -5.22298054e-01,  1.19556400e-01],
            [-2.01313536e-01,  5.42600960e-02,  1.65538985e-02, ...,
             -5.32964850e-01,  3.35939425e-02,  3.38627629e-01]],

           [[ 8.24242125e-03,  1.25277872e-01, -1.12140070e-03, ...,
              2.08327698e-01,  3.28734344e-01,  2.14879904e-01],
            [-1.43213197e-01, -4.29135348e-01, -1.30362905e-01, ...,
             -6.63956252e-01, -3.69633017e-01,  1.62058911e-01],
            [-1.60295017e-01, -2.37651403e-01, -1.63352577e-01, ...,
              5.94509925e-01, -3.30443755e-03, -6.13990602e-01]],

           [[ 4.84466338e-02,  1.44239865e-02, -1.40683869e-01, ...,
              6.17147441e-01,  2.58817462e-01, -2.43399802e-01],
            [-3.08266805e-01,  5.62546539e-01,  5.45277102e-01, ...,
              8.21862325e-02,  1.62839878e-01, -2.00500032e-01],
            [-1.04548625e-01,  2.26204831e-01,  5.63642249e-01, ...,
              2.24118349e-01,  1.36511816e-01, -3.46558612e-01]]])
    Coordinates:
      * trials   (trials) int64 1 1 1 1 1 1 1 1 1 1 1 1 ... 3 3 3 3 3 3 3 3 3 3 3 3
      * roi      (roi) <U1 'x' 'y' 'z'
      * times    (times) float64 -0.5 -0.495 -0.49 -0.485 ... 0.98 0.985 0.99 0.995
    Attributes:
        n_stim:    3
        n_std:     3
        ar_type:   osc_40_3
        stimulus:  [1 2 3]



plot the network


.. code-block:: default


    plt.figure(figsize=(5, 4))
    ss.plot_model()
    plt.show()




.. image:: /auto_examples/armodel/images/sphx_glr_plot_ar_instantaneous_001.png
    :class: sphx-glr-single-img




plot the data


.. code-block:: default


    plt.figure(figsize=(7, 8))
    ss.plot(cmap='bwr')
    plt.tight_layout()
    plt.show()




.. image:: /auto_examples/armodel/images/sphx_glr_plot_ar_instantaneous_002.png
    :class: sphx-glr-single-img




plot the power spectrum density (PSD)


.. code-block:: default


    plt.figure(figsize=(7, 8))
    ss.plot(cmap='Reds', psd=True)
    plt.tight_layout()
    plt.show()





.. image:: /auto_examples/armodel/images/sphx_glr_plot_ar_instantaneous_003.png
    :class: sphx-glr-single-img




Compute the Granger-Causality
-----------------------------

We then compute and plot the Granger Causality. From the plot you can see
that there's indeed an information transfer from X->Y and X->Z and, in
addition, an instantaneous connectivity between Y.Z


.. code-block:: default


    dt = 50
    lag = 5
    step = 2
    t0 = np.arange(lag, ar.shape[-1] - dt, step)
    gc = conn_covgc(ar, roi='roi', times='times', dt=dt, lag=lag, t0=t0,
                    n_jobs=-1)

    # sphinx_gallery_thumbnail_number = 4
    plt.figure(figsize=(12, 10))
    ss.plot_covgc(gc)
    plt.tight_layout()
    plt.show()



.. image:: /auto_examples/armodel/images/sphx_glr_plot_ar_instantaneous_004.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

      0%|          |  : 0/3 [00:00<?,       ?it/s]    100%|##########|  : 3/3 [00:00<00:00, 4408.87it/s]




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  11.208 seconds)


.. _sphx_glr_download_auto_examples_armodel_plot_ar_instantaneous.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_ar_instantaneous.py <plot_ar_instantaneous.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_ar_instantaneous.ipynb <plot_ar_instantaneous.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
