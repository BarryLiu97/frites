.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_armodel_plot_ar_instantaneous.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_armodel_plot_ar_instantaneous.py:


AR : simulate common driving input
==================================

This example illustrates an autoregressive model that simulates a common
driving input (i.e X->Y and X->Z) and how it is measured using the covariance
based Granger Causality


.. code-block:: default

    import numpy as np

    from frites.simulations import StimSpecAR
    from frites.conn import conn_covgc

    import matplotlib.pyplot as plt








Simulate 3 nodes 40hz oscillations
----------------------------------

Here, we use the class :class:`frites.simulations.StimSpecAR` to simulate an
stimulus-specific autoregressive model made of three nodes (X, Y and Z). This
network simulates a transfer X->Y and X->Z. X is then called a common driving
input for Y and Z


.. code-block:: default



    ar_type = 'osc_40_3'  # 40hz oscillations
    n_stim = 3          # number of stimulus
    n_epochs = 50       # number of epochs per stimulus

    ss = StimSpecAR()
    ar = ss.fit(ar_type=ar_type, n_epochs=n_epochs, n_stim=n_stim)
    print(ar)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (trials: 150, roi: 3, times: 300)>
    array([[[ 1.81699270e-01, -3.68850939e-01, -2.85935889e-01, ...,
             -2.23830032e-01, -5.91008248e-01, -2.18757990e-01],
            [ 3.16459722e-01,  4.90734959e-02, -3.01640602e-01, ...,
              3.95914456e-01, -5.23239138e-02, -1.32406273e-01],
            [ 1.04202941e-01, -3.79556918e-01, -3.33493738e-01, ...,
             -5.03405290e-01, -4.39178286e-02,  2.15980367e-01]],

           [[ 1.44499017e-02, -1.07184026e-01, -1.44267691e-01, ...,
              3.84395511e-01,  1.70532553e-01, -1.92474465e-01],
            [ 2.54121139e-01,  9.27520535e-02, -1.42154627e-01, ...,
             -3.06095797e-01, -5.73617244e-01, -3.96212831e-01],
            [-1.69421299e-01, -1.26236508e-01,  1.24491474e-01, ...,
              2.01387046e-01,  4.67842054e-02, -3.86422175e-01]],

           [[ 3.78370193e-04, -1.63160386e-01, -3.34601962e-01, ...,
              7.81025209e-01,  2.74223800e-01, -3.85544498e-01],
            [-3.30278075e-01,  2.07755734e-03,  1.25599614e-01, ...,
             -2.73371154e-01,  3.17547492e-01,  1.48742473e-01],
            [ 1.15944912e-02,  1.62924829e-01,  4.99674118e-01, ...,
              5.02141000e-02, -2.05392818e-01, -2.17591153e-01]],
    ...
           [[-1.38394092e-02,  6.16393722e-02,  1.55481276e-01, ...,
              5.10265835e-01,  2.81334743e-01, -1.99947741e-01],
            [-1.47660848e-01, -5.51044533e-03, -3.38321456e-01, ...,
             -1.23523438e-01,  3.04088041e-01, -3.41345501e-02],
            [-1.26108003e-01, -9.56644645e-02,  1.46981626e-01, ...,
             -3.03226640e-03, -8.71420211e-02, -6.56057821e-02]],

           [[-1.41778787e-01,  3.94435101e-02, -6.75245155e-02, ...,
             -5.04242677e-01, -1.11608860e-01,  2.27919513e-01],
            [-3.62134221e-01,  1.20941666e-01,  3.27550513e-01, ...,
             -3.38362082e-01, -2.84422787e-01,  1.70444038e-01],
            [ 3.24950502e-02,  7.76190270e-02,  6.83166007e-02, ...,
              2.57800370e-01,  2.37228521e-02, -3.53020377e-01]],

           [[ 2.02971452e-01, -1.16541338e-02, -3.38301734e-01, ...,
              8.98430580e-02, -5.21766940e-01, -1.97430234e-01],
            [-4.82739252e-01, -9.03215448e-02,  2.11127163e-01, ...,
             -5.86244130e-02, -1.74932109e-01, -2.64134539e-01],
            [ 1.32056301e-01, -2.75947267e-01, -4.05577071e-01, ...,
              1.34098153e-01,  3.77029740e-01,  2.16228015e-02]]])
    Coordinates:
      * trials   (trials) int64 1 1 1 1 1 1 1 1 1 1 1 1 ... 3 3 3 3 3 3 3 3 3 3 3 3
      * roi      (roi) <U1 'x' 'y' 'z'
      * times    (times) float64 -0.5 -0.495 -0.49 -0.485 ... 0.98 0.985 0.99 0.995
    Attributes:
        n_stim:    3
        n_std:     3
        ar_type:   osc_40_3
        stimulus:  [1 2 3]



plot the network


.. code-block:: default


    plt.figure(figsize=(5, 4))
    ss.plot_model()
    plt.show()




.. image:: /auto_examples/armodel/images/sphx_glr_plot_ar_instantaneous_001.png
    :class: sphx-glr-single-img




plot the data


.. code-block:: default


    plt.figure(figsize=(7, 8))
    ss.plot(cmap='bwr')
    plt.tight_layout()
    plt.show()




.. image:: /auto_examples/armodel/images/sphx_glr_plot_ar_instantaneous_002.png
    :class: sphx-glr-single-img




plot the power spectrum density (PSD)


.. code-block:: default


    plt.figure(figsize=(7, 8))
    ss.plot(cmap='Reds', psd=True)
    plt.tight_layout()
    plt.show()





.. image:: /auto_examples/armodel/images/sphx_glr_plot_ar_instantaneous_003.png
    :class: sphx-glr-single-img




Compute the Granger-Causality
-----------------------------

We then compute and plot the Granger Causality. From the plot you can see
that there's indeed an information transfer from X->Y and X->Z and, in
addition, an instantaneous connectivity between Y.Z


.. code-block:: default


    dt = 50
    lag = 5
    step = 2
    t0 = np.arange(lag, ar.shape[-1] - dt, step)
    gc = conn_covgc(ar, roi='roi', times='times', dt=dt, lag=lag, t0=t0,
                    n_jobs=-1)

    # sphinx_gallery_thumbnail_number = 4
    plt.figure(figsize=(12, 10))
    ss.plot_covgc(gc)
    plt.tight_layout()
    plt.show()



.. image:: /auto_examples/armodel/images/sphx_glr_plot_ar_instantaneous_004.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

      0%|          |  : 0/3 [00:00<?,       ?it/s]    100%|##########|  : 3/3 [00:00<00:00, 2499.09it/s]




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  11.417 seconds)


.. _sphx_glr_download_auto_examples_armodel_plot_ar_instantaneous.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_ar_instantaneous.py <plot_ar_instantaneous.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_ar_instantaneous.ipynb <plot_ar_instantaneous.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
