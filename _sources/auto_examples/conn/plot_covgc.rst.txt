.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_conn_plot_covgc.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_conn_plot_covgc.py:


Estimate the covariance-based Granger Causality
===============================================

This example illustrates how to compute single-trial covariance-based Granger
Causality.


.. code-block:: default

    import numpy as np
    from itertools import product

    from frites.simulations import sim_single_suj_ephy
    from frites.core import covgc

    import matplotlib.pyplot as plt
    plt.style.use('seaborn-white')








Simulate electrophysiological data
----------------------------------

Let's start by simulating MEG / EEG electrophysiological data coming from
a single subject. The output data of this single subject has a shape of
(n_epochs, n_roi, n_times)


.. code-block:: default


    modality = 'meeg'
    n_roi = 3
    n_epochs = 10
    n_times = 1000
    x, roi, _ = sim_single_suj_ephy(n_epochs=n_epochs, n_times=n_times,
                                    modality=modality, n_roi=n_roi, random_state=0)
    times = np.linspace(-1, 1, n_times)







Simulate spatial correlations
-----------------------------

Bellow, we are simulating some distant correlations by injecting the
activity of an ROI to another


.. code-block:: default


    # instantaneous between 0 and 2 (0.2)
    x[:, [2], slice(200, 400)] += x[:, [0], slice(200, 400)]
    # directed flow from 2 to 1 (2->1)
    x[:, [1], slice(400, 600)] += x[:, [2], slice(400, 600)]
    x[:, [2], slice(399, 599)] += x[:, [2], slice(400, 600)]
    # directed flow from 0 to 1 (0->1)
    x[:, [0], slice(600, 800)] += x[:, [1], slice(600, 800)]
    x[:, [0], slice(599, 799)] += x[:, [0], slice(600, 800)]








Compute the covgc
-----------------

The covgc is going to be computed per trials, bewteen pairs of ROI and inside
each of the temporal window


.. code-block:: default


    t0 = np.arange(100, 900, 10)
    lag = 30
    dt = 100
    gc, pairs, roi_p, times_p = covgc(x, dt, lag, t0, times=times, roi=roi,
                                      n_jobs=1, output_type='dataarray')
    # take the mean across trials
    gc = gc.mean('trials')

    plt.figure(figsize=(10, 8))
    plt.subplot(311)
    for r in roi_p:
        plt.plot(gc.times.data, gc.sel(roi=r, direction='x->y').T,
                 label=r.replace('-', ' -> '))
    plt.legend()
    plt.subplot(312)
    for r in roi_p:
        plt.plot(gc.times.data, gc.sel(roi=r, direction='y->x').T,
                 label=r.replace('-', ' <- '))
    plt.legend()
    plt.subplot(313)
    for r in roi_p:
        plt.plot(gc.times.data, gc.sel(roi=r, direction='x.y').T,
                 label=r.replace('-', ' . '))
    plt.legend()
    plt.xlabel('Time')
    plt.show()



.. image:: /auto_examples/conn/images/sphx_glr_plot_covgc_001.png
    :class: sphx-glr-single-img





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  10.347 seconds)


.. _sphx_glr_download_auto_examples_conn_plot_covgc.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_covgc.py <plot_covgc.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_covgc.ipynb <plot_covgc.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
