.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.00845803, 0.62974163, 0.62367138, 0.0096358 , 0.18935422,
            0.77507722, 0.03750407],
           [0.6998826 , 0.16601903, 0.46196411, 0.84281315, 0.72850384,
            0.56933755, 0.09303042],
           [0.49245672, 0.14388546, 0.67537046, 0.66218117, 0.36338035,
            0.02431187, 0.36174938],
           [0.56952264, 0.17853673, 0.47474231, 0.23422147, 0.60227194,
            0.7638237 , 0.48047943],
           [0.36669916, 0.68787228, 0.82095311, 0.92043777, 0.68708175,
            0.84022563, 0.49263048],
           [0.5915658 , 0.88547536, 0.57496427, 0.4039161 , 0.02231   ,
            0.51512206, 0.36456985],
           [0.12256723, 0.94399521, 0.67101263, 0.71788713, 0.3098707 ,
            0.38502191, 0.57118415],
           [0.3514477 , 0.40754324, 0.11505705, 0.8305225 , 0.3443944 ,
            0.0791445 , 0.85759115],
           [0.78820588, 0.01945359, 0.29186174, 0.56297069, 0.30708444,
            0.28435508, 0.7470418 ],
           [0.88984188, 0.77643546, 0.66544327, 0.50604337, 0.87036841,
            0.40450404, 0.83732964],
    ...
           [0.03077955, 0.33415959, 0.90207318, 0.25804225, 0.337631  ,
            0.97774256, 0.12546626],
           [0.68201461, 0.58881724, 0.87769853, 0.45694978, 0.22370895,
            0.12607864, 0.62432377],
           [0.74082488, 0.19834633, 0.70756138, 0.12067158, 0.22026321,
            0.14970806, 0.98670827],
           [0.200462  , 0.69293656, 0.35094537, 0.46923171, 0.73844446,
            0.77661212, 0.33176985],
           [0.91142257, 0.80870351, 0.56163558, 0.58103237, 0.95922261,
            0.59948957, 0.2512756 ],
           [0.27546206, 0.76891341, 0.79646115, 0.34646275, 0.60685426,
            0.59809962, 0.95820553],
           [0.45710862, 0.34233986, 0.73759019, 0.02857264, 0.342578  ,
            0.45167454, 0.251273  ],
           [0.66457086, 0.35472154, 0.3545493 , 0.72195384, 0.55017334,
            0.43901512, 0.47695102],
           [0.18541503, 0.28238374, 0.15155702, 0.8853362 , 0.60384371,
            0.83099084, 0.02892009],
           [0.78264309, 0.4269312 , 0.12622336, 0.7101312 , 0.97746556,
            0.21100774, 0.89521582]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.008458 0.6297 0.6237 ... 0.9775 0.211 0.8952
        second   (times, roi) float64 0.2689 0.1245 0.9379 ... 0.3251 0.6998 0.3298
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.157 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
