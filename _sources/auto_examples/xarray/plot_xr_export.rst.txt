.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.57552819, 0.00993733, 0.01635904, 0.79062156, 0.48609676,
            0.28323603, 0.53139121],
           [0.60243874, 0.75774529, 0.23492472, 0.91202638, 0.77603264,
            0.33259532, 0.05140022],
           [0.89111862, 0.94965874, 0.85557961, 0.997644  , 0.71823408,
            0.61821461, 0.84867577],
           [0.08073662, 0.06043218, 0.89264945, 0.03005865, 0.66462626,
            0.9291027 , 0.10392233],
           [0.88074684, 0.40472788, 0.29977826, 0.90467964, 0.9344702 ,
            0.29102581, 0.73953315],
           [0.37047354, 0.2032415 , 0.8823531 , 0.37017844, 0.55332591,
            0.30698196, 0.07572248],
           [0.9653319 , 0.23287174, 0.25496694, 0.87890686, 0.14204364,
            0.60009242, 0.38990849],
           [0.64377061, 0.4272102 , 0.49531384, 0.87445218, 0.71778117,
            0.92736288, 0.58142297],
           [0.00862907, 0.37596874, 0.47420089, 0.40819028, 0.94976956,
            0.87531069, 0.59421265],
           [0.54431093, 0.87697208, 0.36921351, 0.81008355, 0.14129639,
            0.30582095, 0.3494679 ],
    ...
           [0.07245483, 0.16129998, 0.62304352, 0.66241395, 0.02665431,
            0.98338782, 0.99585413],
           [0.27992396, 0.996886  , 0.53583827, 0.56064934, 0.22775932,
            0.62507491, 0.90297862],
           [0.716889  , 0.32369126, 0.60232183, 0.24903375, 0.9642338 ,
            0.28829359, 0.46950243],
           [0.4790309 , 0.47988031, 0.11207246, 0.32324903, 0.50676645,
            0.90342152, 0.80184728],
           [0.83555847, 0.617745  , 0.89876597, 0.31276432, 0.01344693,
            0.60624614, 0.27560325],
           [0.31079328, 0.53464331, 0.2136799 , 0.69071124, 0.74077203,
            0.50048599, 0.56542054],
           [0.81205153, 0.19135485, 0.08137973, 0.56388615, 0.57656038,
            0.16393126, 0.02777685],
           [0.88781949, 0.19812126, 0.55941259, 0.29536517, 0.91458479,
            0.64294055, 0.0222916 ],
           [0.79579478, 0.61118094, 0.60867374, 0.36412754, 0.08146007,
            0.53406547, 0.30386673],
           [0.49387052, 0.22604696, 0.36399715, 0.53295455, 0.87947291,
            0.61183657, 0.85249952]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.5755 0.009937 0.01636 ... 0.6118 0.8525
        second   (times, roi) float64 0.3308 0.7642 0.3731 ... 0.8172 0.4803 0.1722
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.127 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
