.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.31221716, 0.79979326, 0.19324774, 0.71926086, 0.27165481,
            0.18453609, 0.21995895],
           [0.40028952, 0.89133661, 0.04639495, 0.79376988, 0.36254323,
            0.37544477, 0.33211563],
           [0.56264779, 0.15148162, 0.14094521, 0.72714268, 0.11524272,
            0.73070586, 0.47193792],
           [0.45696198, 0.32452307, 0.35217569, 0.99448909, 0.83840311,
            0.03711368, 0.12849261],
           [0.12694803, 0.45800521, 0.25475364, 0.14360512, 0.35123983,
            0.19093741, 0.28228409],
           [0.10232425, 0.35835308, 0.76500141, 0.00505929, 0.78789606,
            0.55510182, 0.31437144],
           [0.37504268, 0.51512807, 0.77561064, 0.76751586, 0.89718851,
            0.93830708, 0.46673177],
           [0.35802551, 0.56483855, 0.2445565 , 0.49250828, 0.76254124,
            0.03278527, 0.61668153],
           [0.69137953, 0.35460204, 0.81167549, 0.52723387, 0.9474505 ,
            0.26985402, 0.96379933],
           [0.33649745, 0.92549545, 0.68039983, 0.36880948, 0.37683836,
            0.41470692, 0.05223842],
    ...
           [0.58023707, 0.58765431, 0.61374672, 0.74813576, 0.01298925,
            0.58366779, 0.67104141],
           [0.16422705, 0.59028038, 0.82239821, 0.3889107 , 0.36387727,
            0.59367847, 0.21053031],
           [0.03556302, 0.94583793, 0.88426444, 0.86425264, 0.56976502,
            0.17348337, 0.22849849],
           [0.27284333, 0.59078997, 0.99485948, 0.47996977, 0.52040193,
            0.13065725, 0.28308188],
           [0.78873197, 0.83392893, 0.36133244, 0.03607167, 0.31478516,
            0.71514819, 0.1627294 ],
           [0.28414144, 0.48140854, 0.1129917 , 0.12293957, 0.27748338,
            0.12716983, 0.61187744],
           [0.2107507 , 0.96882593, 0.04856978, 0.75719367, 0.30814921,
            0.53304455, 0.94873984],
           [0.34163345, 0.73679957, 0.9021515 , 0.75927098, 0.53276175,
            0.24269523, 0.67215651],
           [0.6442905 , 0.81568784, 0.10700342, 0.10254261, 0.14003313,
            0.7237642 , 0.71675512],
           [0.00912463, 0.36490799, 0.67187268, 0.70327558, 0.46019053,
            0.44113526, 0.67040418]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.3122 0.7998 0.1932 ... 0.4602 0.4411 0.6704
        second   (times, roi) float64 0.5576 0.9939 0.2464 ... 0.5231 0.7696 0.1178
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.128 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
