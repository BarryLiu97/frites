.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.07306866, 0.2272097 , 0.93512499, 0.30421418, 0.36328604,
            0.34172194, 0.76750887],
           [0.6569544 , 0.38930586, 0.69697822, 0.1752363 , 0.18025904,
            0.96732794, 0.2695754 ],
           [0.96785805, 0.7054997 , 0.33098363, 0.52647368, 0.54763518,
            0.31568244, 0.27646797],
           [0.22886712, 0.67467082, 0.43079845, 0.67753262, 0.26362086,
            0.33068946, 0.11903856],
           [0.12555644, 0.10157701, 0.50341031, 0.9677155 , 0.66630583,
            0.47527871, 0.23574514],
           [0.82370055, 0.45958926, 0.04857697, 0.78648984, 0.10866513,
            0.08757407, 0.66838928],
           [0.83487972, 0.09865376, 0.78943407, 0.38945652, 0.19740762,
            0.64463992, 0.04637375],
           [0.19867659, 0.99550902, 0.66302986, 0.36826365, 0.76235134,
            0.99475875, 0.68830281],
           [0.33565408, 0.21793504, 0.22545492, 0.14743545, 0.80912867,
            0.41778883, 0.45763701],
           [0.26381709, 0.926813  , 0.49765582, 0.30249641, 0.48782651,
            0.01822834, 0.1213597 ],
    ...
           [0.85890232, 0.5757504 , 0.07912754, 0.32362208, 0.42273556,
            0.87124485, 0.14619915],
           [0.91186262, 0.36268535, 0.57660279, 0.67775517, 0.88260787,
            0.53553585, 0.45955336],
           [0.66392947, 0.79765761, 0.43026416, 0.10052167, 0.94070995,
            0.79556697, 0.50656902],
           [0.60524216, 0.88302032, 0.29429227, 0.14471296, 0.70584648,
            0.99610958, 0.70037103],
           [0.06991124, 0.96487445, 0.94127764, 0.4655061 , 0.50878102,
            0.90984307, 0.24973109],
           [0.88611171, 0.62498307, 0.87931884, 0.15708209, 0.42859805,
            0.86658811, 0.27404371],
           [0.45721375, 0.0768562 , 0.85638392, 0.12536922, 0.98745599,
            0.00535659, 0.60300823],
           [0.83798665, 0.627244  , 0.56041592, 0.30888014, 0.60108239,
            0.39482909, 0.17861065],
           [0.09152572, 0.76078421, 0.49076338, 0.71828743, 0.32528307,
            0.75014789, 0.27139834],
           [0.74785672, 0.86873485, 0.81537014, 0.4085246 , 0.90510285,
            0.25819054, 0.5766431 ]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.07307 0.2272 0.9351 ... 0.9051 0.2582 0.5766
        second   (times, roi) float64 0.8846 0.8775 0.226 ... 0.03401 0.3562 0.3612
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.124 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
