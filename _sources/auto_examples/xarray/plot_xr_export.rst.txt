.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.19058172, 0.20180819, 0.73995902, 0.37038104, 0.5113996 ,
            0.40078296, 0.15782788],
           [0.51217432, 0.52840255, 0.66383519, 0.05856363, 0.34946287,
            0.30324198, 0.83708308],
           [0.98517569, 0.69959019, 0.68079826, 0.8408251 , 0.84721941,
            0.78080058, 0.92707974],
           [0.74307393, 0.12174344, 0.85392953, 0.06388832, 0.65269174,
            0.09199853, 0.92214328],
           [0.25538592, 0.91342403, 0.1326961 , 0.4158599 , 0.02558185,
            0.22226987, 0.61367437],
           [0.42113661, 0.72563018, 0.91193495, 0.42947891, 0.66741174,
            0.34875013, 0.99214487],
           [0.94506809, 0.46483321, 0.51096029, 0.8265789 , 0.50727255,
            0.01458278, 0.53818118],
           [0.9210338 , 0.38089078, 0.09894224, 0.43173412, 0.93311938,
            0.39741228, 0.41217058],
           [0.64842079, 0.14476095, 0.86783717, 0.0690192 , 0.54363983,
            0.18668712, 0.4970866 ],
           [0.54522214, 0.72245777, 0.28650413, 0.23823736, 0.44830229,
            0.19823335, 0.12626686],
    ...
           [0.76384596, 0.19248232, 0.66607442, 0.84204541, 0.9493261 ,
            0.92911045, 0.61395056],
           [0.18072728, 0.5351708 , 0.94346978, 0.16619093, 0.47071234,
            0.88987851, 0.94815524],
           [0.02528735, 0.44772825, 0.02376773, 0.59550157, 0.11676291,
            0.69659931, 0.14486439],
           [0.74002378, 0.64567701, 0.97767103, 0.26384363, 0.12379423,
            0.64527977, 0.13234041],
           [0.96701801, 0.54361539, 0.73794133, 0.80651467, 0.10853795,
            0.99023132, 0.15141643],
           [0.64476312, 0.64032123, 0.20782109, 0.31574374, 0.55392285,
            0.8550824 , 0.3490747 ],
           [0.7955973 , 0.41070911, 0.07923913, 0.8646944 , 0.15719126,
            0.296277  , 0.3035197 ],
           [0.3253125 , 0.0599817 , 0.05510076, 0.32214861, 0.59870359,
            0.99888535, 0.55884169],
           [0.81139209, 0.6961531 , 0.60742972, 0.42112981, 0.38972069,
            0.55323139, 0.32475178],
           [0.35360074, 0.89701264, 0.90972445, 0.60636621, 0.50561897,
            0.78149832, 0.13240175]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.1906 0.2018 0.74 ... 0.5056 0.7815 0.1324
        second   (times, roi) float64 0.08381 0.7934 0.3145 ... 0.5099 0.9828
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.128 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
