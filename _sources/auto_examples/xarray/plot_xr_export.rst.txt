.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.05430716, 0.41944575, 0.44686202, 0.49227118, 0.91388458,
            0.47792106, 0.54403039],
           [0.15924444, 0.7379818 , 0.71607571, 0.01805424, 0.62311323,
            0.53787503, 0.75928951],
           [0.7989776 , 0.57837401, 0.05279809, 0.15203289, 0.49419331,
            0.34281014, 0.57963577],
           [0.73485784, 0.25029302, 0.93556708, 0.41552684, 0.03948781,
            0.00853868, 0.01344176],
           [0.69393432, 0.27777586, 0.25623416, 0.65888882, 0.3511527 ,
            0.59453143, 0.24528815],
           [0.28632352, 0.62746362, 0.14742578, 0.24203201, 0.50263478,
            0.56536263, 0.08126048],
           [0.63676409, 0.60190803, 0.64140281, 0.65068298, 0.38277307,
            0.83126318, 0.83994203],
           [0.30624159, 0.16390233, 0.63511763, 0.57466111, 0.90849444,
            0.22909889, 0.426822  ],
           [0.01387394, 0.23290432, 0.41617212, 0.87465893, 0.30136726,
            0.18176155, 0.86035495],
           [0.32076153, 0.42789865, 0.84488909, 0.75994986, 0.19928266,
            0.37146267, 0.38008484],
    ...
           [0.06512498, 0.785885  , 0.24676636, 0.94288706, 0.62720933,
            0.11209956, 0.66007528],
           [0.97635802, 0.16192294, 0.09636129, 0.71669226, 0.65037285,
            0.42317399, 0.00414297],
           [0.74655871, 0.30771597, 0.13231752, 0.77307095, 0.07128206,
            0.14439323, 0.80716657],
           [0.49223486, 0.01768603, 0.0144138 , 0.16008339, 0.50460729,
            0.37431725, 0.0989207 ],
           [0.85500927, 0.58031832, 0.40135991, 0.3642922 , 0.02876152,
            0.70217861, 0.95154773],
           [0.14320567, 0.6379272 , 0.58193149, 0.05448816, 0.27974062,
            0.88573802, 0.1576379 ],
           [0.63031181, 0.29178755, 0.02179892, 0.31811733, 0.19778018,
            0.22385441, 0.17812804],
           [0.62311774, 0.0176734 , 0.41049185, 0.60746642, 0.9283265 ,
            0.67508737, 0.13856256],
           [0.86644167, 0.88918651, 0.39354706, 0.99981547, 0.70523266,
            0.39168451, 0.02973706],
           [0.97994841, 0.20186359, 0.00770482, 0.10324846, 0.90069416,
            0.85836015, 0.30073998]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.05431 0.4194 0.4469 ... 0.9007 0.8584 0.3007
        second   (times, roi) float64 0.3972 0.8794 0.01006 ... 0.8311 0.6695 0.8109
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.123 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
