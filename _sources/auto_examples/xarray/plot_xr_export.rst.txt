.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.32273893, 0.54010443, 0.44810861, 0.61311864, 0.75783531,
            0.49566299, 0.91626234],
           [0.02127642, 0.9048739 , 0.30019054, 0.58253228, 0.3468185 ,
            0.16379673, 0.40881911],
           [0.35613519, 0.16980135, 0.9220712 , 0.28993879, 0.69571374,
            0.30053178, 0.52275204],
           [0.05016092, 0.32436891, 0.15598915, 0.06127067, 0.38880806,
            0.62888266, 0.60519853],
           [0.97188551, 0.32438323, 0.16334463, 0.56815101, 0.95261115,
            0.82216288, 0.13356481],
           [0.53028057, 0.07902641, 0.60302398, 0.96037936, 0.71962922,
            0.67618969, 0.13477068],
           [0.70668837, 0.91625694, 0.34818354, 0.08995624, 0.92334804,
            0.23244941, 0.09959876],
           [0.18220656, 0.1171064 , 0.92936783, 0.07778756, 0.72222034,
            0.76954477, 0.93296423],
           [0.89512716, 0.64813127, 0.69152059, 0.85849645, 0.68946664,
            0.1302265 , 0.08843514],
           [0.21336348, 0.50984351, 0.36188881, 0.76294678, 0.13190435,
            0.52416445, 0.81626958],
    ...
           [0.63594574, 0.55868222, 0.80282672, 0.59684342, 0.88936681,
            0.63062782, 0.37558496],
           [0.17674592, 0.36348806, 0.3736938 , 0.70582181, 0.31255879,
            0.01790127, 0.40174729],
           [0.88655857, 0.77717443, 0.51717969, 0.35862942, 0.90758706,
            0.21842537, 0.22544214],
           [0.74501798, 0.62615828, 0.5845077 , 0.86359639, 0.27536666,
            0.02125138, 0.3098152 ],
           [0.3935855 , 0.26423378, 0.69670462, 0.37790179, 0.58685202,
            0.65173228, 0.09211429],
           [0.96224787, 0.4527573 , 0.93672271, 0.45918714, 0.91330332,
            0.46117534, 0.84797638],
           [0.19601137, 0.842578  , 0.01305136, 0.22638735, 0.0661976 ,
            0.68893726, 0.64671147],
           [0.8784663 , 0.92482681, 0.73840256, 0.70150683, 0.7895917 ,
            0.75699552, 0.82825052],
           [0.54187708, 0.32501883, 0.76055521, 0.50733631, 0.51109974,
            0.5240353 , 0.4629999 ],
           [0.79082722, 0.56667415, 0.25601524, 0.59548439, 0.35563154,
            0.00840672, 0.7602001 ]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.3227 0.5401 0.4481 ... 0.008407 0.7602
        second   (times, roi) float64 0.7349 0.4626 0.3208 ... 0.3357 0.5271 0.6221
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.141 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
