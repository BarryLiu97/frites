.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.55789788, 0.63369518, 0.84445918, 0.92272108, 0.62592232,
            0.03458779, 0.80538266],
           [0.35969558, 0.06642549, 0.60929205, 0.10995947, 0.57562454,
            0.7553629 , 0.08363234],
           [0.37126172, 0.54036943, 0.09802838, 0.11630355, 0.50335369,
            0.31635549, 0.78498158],
           [0.52202184, 0.77570611, 0.9887095 , 0.56578455, 0.06777572,
            0.74700317, 0.63720525],
           [0.69521945, 0.95217033, 0.18455041, 0.33421324, 0.01235093,
            0.1984153 , 0.91266682],
           [0.01807628, 0.22957866, 0.79926738, 0.4474009 , 0.1050758 ,
            0.86272768, 0.92665574],
           [0.29342665, 0.93489529, 0.07894671, 0.6889844 , 0.96668439,
            0.17358026, 0.60017799],
           [0.58415841, 0.76497105, 0.4439626 , 0.41850171, 0.36226477,
            0.37320964, 0.47214255],
           [0.06263918, 0.55920604, 0.12669474, 0.34191066, 0.99706904,
            0.75870126, 0.22203594],
           [0.8044144 , 0.50748208, 0.65752535, 0.15146675, 0.80079781,
            0.93354242, 0.32134757],
    ...
           [0.18619464, 0.54988456, 0.17915832, 0.62546379, 0.24495426,
            0.82284485, 0.24065888],
           [0.78893843, 0.87549085, 0.65976832, 0.6879805 , 0.50284817,
            0.6615423 , 0.93130996],
           [0.62993648, 0.5787572 , 0.22254037, 0.95288569, 0.1327808 ,
            0.76243719, 0.40111866],
           [0.95411074, 0.86488449, 0.15108864, 0.13235574, 0.66875786,
            0.26981909, 0.17457232],
           [0.54681179, 0.23072208, 0.55371808, 0.7670452 , 0.05162971,
            0.06445678, 0.37942186],
           [0.83367833, 0.18149704, 0.19944465, 0.7382734 , 0.26793196,
            0.30308352, 0.18617827],
           [0.730595  , 0.40751752, 0.11262668, 0.2210488 , 0.87096184,
            0.10657566, 0.26516404],
           [0.06414264, 0.94065532, 0.34069642, 0.70140001, 0.4399545 ,
            0.49860104, 0.71418313],
           [0.17507428, 0.89069776, 0.96432791, 0.39936186, 0.8818783 ,
            0.84397299, 0.31923212],
           [0.51401938, 0.42790084, 0.72385884, 0.31569601, 0.19182397,
            0.23581645, 0.43516374]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.5579 0.6337 0.8445 ... 0.1918 0.2358 0.4352
        second   (times, roi) float64 0.9398 0.3477 0.1481 ... 0.6133 0.6379 0.7974
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.116 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
