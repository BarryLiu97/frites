.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.52488983, 0.0325261 , 0.07540165, 0.70555272, 0.49138392,
            0.65994217, 0.55556446],
           [0.42387817, 0.03628806, 0.47110759, 0.61718695, 0.68994982,
            0.17800427, 0.35960438],
           [0.22671131, 0.71990805, 0.10632551, 0.71292068, 0.5576264 ,
            0.16929745, 0.73138126],
           [0.46820427, 0.77157875, 0.00448735, 0.49693036, 0.88397222,
            0.33153988, 0.29289486],
           [0.58940512, 0.86173411, 0.64924834, 0.85171415, 0.54011443,
            0.52111944, 0.33264175],
           [0.79457446, 0.38526966, 0.94235847, 0.95741317, 0.3109746 ,
            0.31753456, 0.64184321],
           [0.32834037, 0.5944775 , 0.78966125, 0.05172911, 0.03603159,
            0.63382611, 0.37864092],
           [0.06579819, 0.46507609, 0.63588742, 0.90516566, 0.39092252,
            0.05438437, 0.94729908],
           [0.86142655, 0.6806578 , 0.6810988 , 0.54029577, 0.82726337,
            0.54651453, 0.5902301 ],
           [0.22543025, 0.27885131, 0.39634689, 0.71819564, 0.16295602,
            0.0562016 , 0.97989698],
    ...
           [0.32399546, 0.98026329, 0.45449842, 0.95878486, 0.44983726,
            0.53372028, 0.42263868],
           [0.78377923, 0.34046742, 0.79008664, 0.75633631, 0.21512529,
            0.90878449, 0.96473643],
           [0.35912717, 0.11649079, 0.26354359, 0.66496106, 0.90701029,
            0.79930219, 0.13090612],
           [0.41578384, 0.43038374, 0.84026331, 0.6301476 , 0.86717406,
            0.67126818, 0.18211189],
           [0.10556405, 0.86912583, 0.42570466, 0.59267798, 0.80041301,
            0.5296309 , 0.58884317],
           [0.35705218, 0.27616663, 0.2779271 , 0.77252191, 0.87448468,
            0.55074904, 0.45726055],
           [0.76375396, 0.80859844, 0.16466057, 0.46688336, 0.46530917,
            0.31846393, 0.68282264],
           [0.17713119, 0.26229129, 0.53593747, 0.09716257, 0.20095294,
            0.22790084, 0.03451893],
           [0.73629456, 0.5408473 , 0.42433668, 0.65564215, 0.88298926,
            0.18743647, 0.06395977],
           [0.18322866, 0.20469465, 0.66748901, 0.19621287, 0.04614147,
            0.12487018, 0.12793805]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.5249 0.03253 0.0754 ... 0.1249 0.1279
        second   (times, roi) float64 0.4523 0.7041 0.7797 ... 0.9092 0.6768 0.1138
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.120 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
