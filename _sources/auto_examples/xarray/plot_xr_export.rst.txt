.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.58528102, 0.31874126, 0.78751853, 0.17793941, 0.96942094,
            0.03905052, 0.64843301],
           [0.74315859, 0.75094255, 0.18264039, 0.60378404, 0.86830916,
            0.24119551, 0.94984314],
           [0.10639692, 0.79262548, 0.88706977, 0.98908412, 0.83030228,
            0.94606662, 0.50355663],
           [0.58901651, 0.3122826 , 0.49184241, 0.59230083, 0.95720372,
            0.35523751, 0.95304771],
           [0.31697196, 0.30156632, 0.21499667, 0.22290539, 0.93055782,
            0.79371968, 0.06245668],
           [0.46632293, 0.82041893, 0.76233517, 0.59195059, 0.05498893,
            0.84023919, 0.85294804],
           [0.2117586 , 0.43847347, 0.77563661, 0.03865529, 0.32921901,
            0.51904265, 0.34910456],
           [0.77062081, 0.1687077 , 0.01017992, 0.42075643, 0.84008356,
            0.98646099, 0.50072476],
           [0.18905318, 0.46262525, 0.18463807, 0.1009834 , 0.30946196,
            0.44706609, 0.88472963],
           [0.31022663, 0.16338812, 0.8418756 , 0.57434462, 0.95830713,
            0.58699434, 0.59241387],
    ...
           [0.89880605, 0.77835765, 0.93399573, 0.5189328 , 0.52312481,
            0.86359147, 0.67858143],
           [0.13202274, 0.64118882, 0.49259998, 0.53383605, 0.29405857,
            0.40250139, 0.1307372 ],
           [0.07334515, 0.53679443, 0.18647068, 0.00189256, 0.7542754 ,
            0.26046521, 0.91175938],
           [0.45912712, 0.35575902, 0.40922012, 0.27679925, 0.61390785,
            0.56464098, 0.31223575],
           [0.77703217, 0.77112736, 0.74169826, 0.97721715, 0.03113424,
            0.82355267, 0.5120158 ],
           [0.06249321, 0.9642907 , 0.98496882, 0.35869399, 0.9270791 ,
            0.01651698, 0.35708725],
           [0.54696546, 0.12490068, 0.09650044, 0.65063136, 0.15933902,
            0.66026084, 0.40016186],
           [0.72906323, 0.6671786 , 0.79785588, 0.38386816, 0.25950384,
            0.55131878, 0.16722924],
           [0.63955699, 0.8358125 , 0.56121646, 0.50028564, 0.0069664 ,
            0.03776044, 0.59470944],
           [0.12432501, 0.80093705, 0.40315636, 0.73981525, 0.27634957,
            0.31947344, 0.1203716 ]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.5853 0.3187 0.7875 ... 0.2763 0.3195 0.1204
        second   (times, roi) float64 0.6912 0.5102 0.8174 ... 0.4345 0.9138 0.3517
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.130 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
