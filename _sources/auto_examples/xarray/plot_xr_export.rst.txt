.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.26436777, 0.15598174, 0.60961827, 0.57116333, 0.58861014,
            0.39958983, 0.54966732],
           [0.04620782, 0.11831112, 0.42615974, 0.64772697, 0.29474282,
            0.91098848, 0.46063691],
           [0.87103623, 0.78465406, 0.72336148, 0.32263578, 0.41566797,
            0.3888068 , 0.77812972],
           [0.96678634, 0.8518883 , 0.90113086, 0.51125334, 0.39689554,
            0.06716902, 0.36592301],
           [0.71446077, 0.02555436, 0.86479856, 0.72045708, 0.27480177,
            0.86863142, 0.02505106],
           [0.3193878 , 0.06151554, 0.016825  , 0.41434627, 0.47377252,
            0.33431928, 0.98569905],
           [0.42580984, 0.70180466, 0.57954418, 0.6256749 , 0.3884018 ,
            0.16068972, 0.60673578],
           [0.92760103, 0.6712166 , 0.04918221, 0.36369309, 0.82367342,
            0.37062903, 0.91880535],
           [0.62374315, 0.21514705, 0.58818527, 0.80565212, 0.16762464,
            0.78165016, 0.61814998],
           [0.11949904, 0.69415461, 0.55726521, 0.85853136, 0.31086164,
            0.3890072 , 0.71074456],
    ...
           [0.12926391, 0.21548094, 0.59530744, 0.97910438, 0.89149159,
            0.62112039, 0.54211289],
           [0.69648624, 0.38063502, 0.91282722, 0.65281337, 0.9709946 ,
            0.43568655, 0.45565488],
           [0.51778297, 0.20338305, 0.51949769, 0.97027244, 0.83988057,
            0.71986698, 0.61087874],
           [0.87370004, 0.65297037, 0.2211093 , 0.46059681, 0.73240452,
            0.39984701, 0.56649411],
           [0.67671694, 0.16986894, 0.44187668, 0.4434342 , 0.2440818 ,
            0.87935968, 0.83515225],
           [0.75895506, 0.29938131, 0.00113408, 0.59448456, 0.85623783,
            0.87420788, 0.25966097],
           [0.46001868, 0.54753028, 0.46669207, 0.82831527, 0.81961492,
            0.98198571, 0.97469212],
           [0.61241952, 0.21758704, 0.4886976 , 0.44409377, 0.70042273,
            0.41882903, 0.09461237],
           [0.45504843, 0.10204786, 0.12621043, 0.17871803, 0.12970738,
            0.94252918, 0.22259103],
           [0.51279005, 0.87723773, 0.29309066, 0.81610605, 0.21587129,
            0.9311538 , 0.01043332]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.2644 0.156 0.6096 ... 0.2159 0.9312 0.01043
        second   (times, roi) float64 0.007929 0.686 0.3375 ... 0.4743 0.2089 0.5188
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.113 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
