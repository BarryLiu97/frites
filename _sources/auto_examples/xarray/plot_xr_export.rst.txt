.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.67968358, 0.90852631, 0.4729932 , 0.39296509, 0.48733702,
            0.78282703, 0.87418043],
           [0.85723096, 0.77199344, 0.48324192, 0.72568173, 0.45952719,
            0.43376081, 0.11287458],
           [0.78858945, 0.16220508, 0.50638786, 0.18202823, 0.40290999,
            0.00426034, 0.67844257],
           [0.01421677, 0.86202579, 0.34596756, 0.7591108 , 0.72248243,
            0.25592644, 0.7938617 ],
           [0.30598239, 0.21053475, 0.83193089, 0.25179018, 0.23593278,
            0.20705   , 0.88235425],
           [0.04603642, 0.06869454, 0.1053152 , 0.2205695 , 0.57987829,
            0.89858943, 0.20289188],
           [0.824497  , 0.91676035, 0.50421499, 0.69802685, 0.00943837,
            0.67843672, 0.5312239 ],
           [0.27867007, 0.32153171, 0.93659546, 0.10203798, 0.19496959,
            0.03141727, 0.96327158],
           [0.45927947, 0.43355417, 0.01178466, 0.31991533, 0.11358831,
            0.3428013 , 0.34302647],
           [0.7158488 , 0.52330514, 0.6604145 , 0.69498975, 0.91280922,
            0.85518154, 0.39190971],
    ...
           [0.94780107, 0.4928727 , 0.88646049, 0.68404692, 0.03796729,
            0.84730334, 0.7401162 ],
           [0.62670836, 0.93519149, 0.86543835, 0.310588  , 0.21102926,
            0.32470005, 0.55854939],
           [0.27308955, 0.06180005, 0.64592779, 0.31897195, 0.88450048,
            0.55746968, 0.88553433],
           [0.1742273 , 0.52827526, 0.27669745, 0.32361025, 0.43540107,
            0.55619129, 0.481922  ],
           [0.70163758, 0.48970431, 0.27760341, 0.90774657, 0.51202179,
            0.72893807, 0.96779077],
           [0.21193344, 0.48145443, 0.1888296 , 0.9091863 , 0.30720406,
            0.9418239 , 0.16447425],
           [0.5108943 , 0.78980296, 0.83282405, 0.6036818 , 0.51888237,
            0.85451355, 0.73449898],
           [0.92833089, 0.68590542, 0.94159117, 0.0132388 , 0.82036132,
            0.59447903, 0.04592448],
           [0.18799473, 0.70344057, 0.45422843, 0.73997287, 0.31901102,
            0.34153423, 0.6305713 ],
           [0.94231495, 0.50608551, 0.89482744, 0.20237099, 0.76276881,
            0.53744852, 0.71644257]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.6797 0.9085 0.473 ... 0.7628 0.5374 0.7164
        second   (times, roi) float64 0.04499 0.6736 0.765 ... 0.3155 0.8953 0.5527
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.121 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
