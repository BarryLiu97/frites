.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.82018612, 0.48214451, 0.36756838, 0.12277012, 0.87933244,
            0.53133474, 0.33707909],
           [0.90498089, 0.45980382, 0.05577804, 0.17511315, 0.47191227,
            0.46890866, 0.76148793],
           [0.82024304, 0.4282006 , 0.64941426, 0.40174023, 0.20257055,
            0.93806059, 0.82135026],
           [0.03508804, 0.39002777, 0.66994599, 0.13893899, 0.73650396,
            0.22533093, 0.74006049],
           [0.76420133, 0.28334299, 0.56290165, 0.02032845, 0.52743811,
            0.38216037, 0.70841766],
           [0.61296386, 0.55452482, 0.6235098 , 0.40929777, 0.050684  ,
            0.36369617, 0.22102934],
           [0.338422  , 0.51714525, 0.5219117 , 0.5739988 , 0.56457363,
            0.64911405, 0.78456007],
           [0.88696447, 0.75633512, 0.56075748, 0.56284236, 0.46590422,
            0.24270752, 0.4446019 ],
           [0.75690868, 0.60499002, 0.57112121, 0.2462675 , 0.23632439,
            0.37487801, 0.11048586],
           [0.30699151, 0.5309382 , 0.29872563, 0.28545105, 0.00657574,
            0.21987076, 0.0888065 ],
    ...
           [0.21363464, 0.98534002, 0.83940705, 0.88316019, 0.11131216,
            0.27083091, 0.05379921],
           [0.7354256 , 0.84059178, 0.84933084, 0.04132923, 0.60430681,
            0.56027299, 0.11676526],
           [0.50201462, 0.89328213, 0.62392482, 0.1961824 , 0.96739884,
            0.07077242, 0.84206734],
           [0.71521051, 0.34294566, 0.15575537, 0.34357605, 0.20719146,
            0.11258014, 0.84479681],
           [0.7683386 , 0.05967859, 0.47108612, 0.14689482, 0.00206633,
            0.77762   , 0.83597301],
           [0.4315791 , 0.94827047, 0.01679814, 0.20488072, 0.53490573,
            0.70851302, 0.8307215 ],
           [0.26294402, 0.32584407, 0.35191249, 0.99983476, 0.34469897,
            0.58835338, 0.48484772],
           [0.2482585 , 0.70873648, 0.1116737 , 0.62360303, 0.68793081,
            0.23813889, 0.27543031],
           [0.09047806, 0.79384478, 0.6559896 , 0.34576139, 0.54171739,
            0.49788476, 0.88072307],
           [0.78140568, 0.72801456, 0.93634367, 0.45324517, 0.49954961,
            0.57330629, 0.33394474]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.8202 0.4821 0.3676 ... 0.4995 0.5733 0.3339
        second   (times, roi) float64 0.1377 0.9654 0.7094 ... 0.9899 0.2698 0.4196
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.115 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
