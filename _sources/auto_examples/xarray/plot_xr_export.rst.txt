.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.7084163 , 0.42930099, 0.78111293, 0.10763804, 0.12567608,
            0.06904896, 0.63569691],
           [0.98621434, 0.94481111, 0.84271113, 0.53653563, 0.45516344,
            0.08539508, 0.80090855],
           [0.28839916, 0.33480556, 0.34581862, 0.09410456, 0.06214972,
            0.22630328, 0.65307763],
           [0.25895673, 0.13880721, 0.1251391 , 0.00542745, 0.16096292,
            0.6407925 , 0.28114198],
           [0.93301765, 0.92744683, 0.47313906, 0.60285726, 0.20200586,
            0.14458286, 0.36315035],
           [0.69967599, 0.21051844, 0.51994613, 0.97047615, 0.85756737,
            0.6643756 , 0.23966255],
           [0.14728911, 0.80154367, 0.04335697, 0.80789728, 0.28694423,
            0.37218688, 0.59517943],
           [0.64887748, 0.06124444, 0.57308848, 0.38397595, 0.91005558,
            0.38196841, 0.34612587],
           [0.05893488, 0.25840892, 0.03765633, 0.24436283, 0.75560426,
            0.02040305, 0.12775393],
           [0.54619053, 0.53668683, 0.60483982, 0.31315862, 0.90515792,
            0.38595825, 0.9588261 ],
    ...
           [0.95095981, 0.35442607, 0.72096116, 0.43638529, 0.02145262,
            0.16865853, 0.41671115],
           [0.36414089, 0.24754685, 0.30967772, 0.78942002, 0.85012925,
            0.95422442, 0.63769888],
           [0.52495344, 0.34621306, 0.43589158, 0.10925018, 0.88668712,
            0.8160848 , 0.69627329],
           [0.58088955, 0.93098872, 0.75492287, 0.61573613, 0.28296049,
            0.99740557, 0.85608107],
           [0.90969591, 0.11361621, 0.12975713, 0.72439421, 0.25619785,
            0.61820143, 0.54934841],
           [0.73693207, 0.93882543, 0.72809635, 0.27246622, 0.82869037,
            0.10612485, 0.58271381],
           [0.8835065 , 0.66822098, 0.65621293, 0.98183433, 0.83868462,
            0.9402383 , 0.28933229],
           [0.17061459, 0.65408347, 0.9177364 , 0.96355422, 0.70896463,
            0.94904347, 0.28373498],
           [0.02934906, 0.39118571, 0.71670556, 0.59004806, 0.57282303,
            0.18304385, 0.88100229],
           [0.92489548, 0.81884843, 0.54520599, 0.03898463, 0.91669005,
            0.89113477, 0.24531733]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.7084 0.4293 0.7811 ... 0.9167 0.8911 0.2453
        second   (times, roi) float64 0.7002 0.4061 0.05636 ... 0.1746 0.9119 0.8897
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.139 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
