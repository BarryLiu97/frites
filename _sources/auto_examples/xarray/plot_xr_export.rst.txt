.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.50850285, 0.57584641, 0.69120404, 0.82352531, 0.57199276,
            0.23622873, 0.19271734],
           [0.39797381, 0.32226619, 0.28830733, 0.91360266, 0.63452948,
            0.77430281, 0.05674759],
           [0.65739101, 0.14372869, 0.90523849, 0.70734474, 0.0609776 ,
            0.66975982, 0.80614167],
           [0.57627944, 0.85915439, 0.57390979, 0.9289228 , 0.66445285,
            0.052073  , 0.42454952],
           [0.43365816, 0.48790174, 0.10300759, 0.61526159, 0.51496973,
            0.50931784, 0.00491745],
           [0.76139059, 0.80996915, 0.91203592, 0.48959692, 0.78686875,
            0.71226896, 0.82984487],
           [0.7004026 , 0.84338152, 0.25321406, 0.67258803, 0.57636611,
            0.37791907, 0.02370789],
           [0.79093955, 0.67040346, 0.09071903, 0.59120753, 0.47570738,
            0.67508977, 0.45951778],
           [0.85902813, 0.04343967, 0.1754816 , 0.65608618, 0.95346068,
            0.9331574 , 0.54224517],
           [0.40630099, 0.64381614, 0.26338759, 0.9461699 , 0.27926925,
            0.48769341, 0.21037365],
    ...
           [0.62666345, 0.79179226, 0.91661298, 0.37557825, 0.34164165,
            0.38792616, 0.42297539],
           [0.26237367, 0.26673309, 0.1989252 , 0.21120029, 0.20291114,
            0.18151655, 0.60672173],
           [0.99894925, 0.15176138, 0.58052972, 0.65134648, 0.00366139,
            0.44035933, 0.22523223],
           [0.14395702, 0.71370263, 0.89129621, 0.64701657, 0.49772767,
            0.16012777, 0.26457465],
           [0.03049724, 0.53692   , 0.72207134, 0.23340785, 0.98688902,
            0.42589772, 0.26563801],
           [0.26946958, 0.16085016, 0.0227293 , 0.87894654, 0.29014462,
            0.26655501, 0.69917711],
           [0.27828965, 0.76427433, 0.31537523, 0.85822948, 0.65567917,
            0.63609348, 0.1760759 ],
           [0.02188787, 0.24860497, 0.77398625, 0.29947569, 0.07890875,
            0.28000385, 0.09675207],
           [0.32592293, 0.92777811, 0.14400452, 0.45517266, 0.2013155 ,
            0.90271578, 0.50892241],
           [0.69868852, 0.063055  , 0.28184101, 0.39828619, 0.39283464,
            0.82156572, 0.30335641]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.5085 0.5758 0.6912 ... 0.3928 0.8216 0.3034
        second   (times, roi) float64 0.0419 0.5464 0.3721 ... 0.279 0.0852 0.3944
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.152 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
