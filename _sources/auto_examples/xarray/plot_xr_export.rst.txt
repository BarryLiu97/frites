.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.95200933, 0.87998254, 0.47671323, 0.03249708, 0.85457994,
            0.6507387 , 0.38345031],
           [0.71812518, 0.66767491, 0.08712348, 0.32541476, 0.66729356,
            0.02528242, 0.67323777],
           [0.05409337, 0.89071686, 0.34036414, 0.4112919 , 0.97689984,
            0.41972129, 0.21435099],
           [0.41034357, 0.34991087, 0.42119037, 0.48429014, 0.53980687,
            0.66140026, 0.47787732],
           [0.31666784, 0.45155737, 0.85887958, 0.26640221, 0.4540967 ,
            0.06573095, 0.52208563],
           [0.56402052, 0.72089269, 0.83423659, 0.04690006, 0.96019575,
            0.11334585, 0.51848912],
           [0.91610927, 0.38183063, 0.6682982 , 0.66464155, 0.65406237,
            0.62097055, 0.61727167],
           [0.93030505, 0.66114124, 0.93194716, 0.96767381, 0.29949261,
            0.50530778, 0.16335064],
           [0.93298926, 0.76599065, 0.03818832, 0.92602787, 0.7022405 ,
            0.43834834, 0.43743444],
           [0.39430345, 0.6071607 , 0.42880693, 0.4810414 , 0.64550942,
            0.87653899, 0.58535335],
    ...
           [0.90530129, 0.91336406, 0.51705383, 0.61374507, 0.08160329,
            0.71393155, 0.68136177],
           [0.3451981 , 0.46303986, 0.27387563, 0.67577686, 0.48841818,
            0.5035447 , 0.5090776 ],
           [0.72591279, 0.58839412, 0.9910987 , 0.40185083, 0.54278742,
            0.35123122, 0.38026808],
           [0.02991285, 0.54614753, 0.43602895, 0.20387766, 0.10130252,
            0.52009924, 0.25249267],
           [0.57603116, 0.45803105, 0.53412397, 0.4572036 , 0.17317994,
            0.34528855, 0.59246089],
           [0.47585854, 0.24505732, 0.73859671, 0.0877659 , 0.63854554,
            0.80818155, 0.47974393],
           [0.22598007, 0.3974025 , 0.17244342, 0.49058376, 0.2239299 ,
            0.70531671, 0.0061344 ],
           [0.77771218, 0.43512504, 0.51106737, 0.9328254 , 0.73637483,
            0.52222955, 0.03600311],
           [0.60206732, 0.19389854, 0.69221433, 0.86371532, 0.97913032,
            0.02626297, 0.84466036],
           [0.33241716, 0.98143034, 0.1313908 , 0.78874905, 0.41835726,
            0.18954567, 0.16970878]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.952 0.88 0.4767 ... 0.4184 0.1895 0.1697
        second   (times, roi) float64 0.007636 0.1937 0.1293 ... 0.2963 0.02899
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.131 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
