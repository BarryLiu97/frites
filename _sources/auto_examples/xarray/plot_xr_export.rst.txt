.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.03244893, 0.96167915, 0.79965633, 0.01713612, 0.71403609,
            0.80825233, 0.4491399 ],
           [0.03304107, 0.87594737, 0.46876821, 0.45113768, 0.50325762,
            0.22538899, 0.22448673],
           [0.37234384, 0.71061145, 0.44498498, 0.75823845, 0.50433329,
            0.33110646, 0.7209169 ],
           [0.20808744, 0.56196956, 0.97610778, 0.57487105, 0.96042088,
            0.40271434, 0.46014973],
           [0.31521347, 0.42273697, 0.55005984, 0.12428906, 0.45788801,
            0.06800065, 0.01638449],
           [0.74930394, 0.01191924, 0.85224327, 0.81808563, 0.10420423,
            0.96685278, 0.85858131],
           [0.40008201, 0.1346777 , 0.92051263, 0.5073158 , 0.37942624,
            0.16544965, 0.7029259 ],
           [0.40128647, 0.60762186, 0.19504419, 0.69644105, 0.6845871 ,
            0.99249519, 0.48454707],
           [0.28250915, 0.3680774 , 0.75660864, 0.58385317, 0.20771565,
            0.38536436, 0.71355471],
           [0.28492462, 0.1832519 , 0.32658175, 0.94836916, 0.67206234,
            0.75807497, 0.07929702],
    ...
           [0.16143643, 0.81627293, 0.41541553, 0.39257106, 0.29450919,
            0.98972302, 0.33352832],
           [0.3163372 , 0.2807668 , 0.12899193, 0.2990553 , 0.30083388,
            0.21415236, 0.67080479],
           [0.51123939, 0.57745075, 0.98302417, 0.82827685, 0.06686809,
            0.6847462 , 0.73833952],
           [0.11559497, 0.44296156, 0.06239009, 0.38722754, 0.1870217 ,
            0.13882738, 0.33194673],
           [0.65915084, 0.6800043 , 0.36845311, 0.02499758, 0.82753966,
            0.29947109, 0.03515799],
           [0.75601186, 0.70408863, 0.34445942, 0.80229425, 0.95479545,
            0.65123435, 0.21421468],
           [0.739356  , 0.36572928, 0.86557379, 0.15668191, 0.50646239,
            0.77559914, 0.35684877],
           [0.83370243, 0.46331005, 0.65440368, 0.91942804, 0.31828578,
            0.99657425, 0.50301261],
           [0.59387851, 0.42265824, 0.98713692, 0.89663384, 0.70722065,
            0.65062025, 0.18498642],
           [0.50261584, 0.69861439, 0.89074081, 0.58678264, 0.27936707,
            0.38338955, 0.01878338]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.03245 0.9617 0.7997 ... 0.3834 0.01878
        second   (times, roi) float64 0.7932 0.9458 0.972 ... 0.8146 0.9119 0.05264
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.114 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
