.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.36322379, 0.41085135, 0.3828677 , 0.50769368, 0.66835204,
            0.078469  , 0.12976603],
           [0.98493108, 0.29705462, 0.5179893 , 0.42652196, 0.87247152,
            0.35244709, 0.51825205],
           [0.89193431, 0.76461147, 0.67859447, 0.50696616, 0.43280683,
            0.95068036, 0.67126586],
           [0.1710126 , 0.15890864, 0.36880571, 0.91493262, 0.86404135,
            0.43288231, 0.43418725],
           [0.81167972, 0.55213233, 0.34080517, 0.70788992, 0.1444951 ,
            0.46884024, 0.99583465],
           [0.82716398, 0.35605305, 0.60716715, 0.34498962, 0.52903438,
            0.01358657, 0.10596394],
           [0.13206988, 0.37038129, 0.38856694, 0.14951292, 0.33904969,
            0.37683062, 0.5860536 ],
           [0.45333924, 0.68156376, 0.86442115, 0.2471058 , 0.00998431,
            0.11465703, 0.51818787],
           [0.69498906, 0.41358462, 0.65757907, 0.01571979, 0.10706738,
            0.87165325, 0.00266761],
           [0.3436379 , 0.5631659 , 0.48283147, 0.41120953, 0.92115243,
            0.69555314, 0.82814614],
    ...
           [0.37623484, 0.6556579 , 0.81339473, 0.42206986, 0.10985812,
            0.01015594, 0.84893331],
           [0.84282928, 0.30959085, 0.19279744, 0.02894662, 0.3086176 ,
            0.88159478, 0.85177993],
           [0.10370015, 0.65705829, 0.05567805, 0.87085108, 0.79353215,
            0.75898573, 0.33345667],
           [0.98544417, 0.36955465, 0.04346072, 0.1425232 , 0.13618384,
            0.99887403, 0.25637209],
           [0.3464695 , 0.15293836, 0.42890961, 0.818367  , 0.23120412,
            0.76136327, 0.33429184],
           [0.39525284, 0.7228126 , 0.28594874, 0.18891104, 0.60848916,
            0.62990671, 0.85403233],
           [0.53571636, 0.54567363, 0.48287159, 0.9786342 , 0.44591144,
            0.71369194, 0.07608365],
           [0.23155459, 0.52623621, 0.87829758, 0.11862281, 0.13426498,
            0.14428492, 0.15789838],
           [0.05988127, 0.65449503, 0.56461919, 0.91546744, 0.01232517,
            0.57484875, 0.54984908],
           [0.05189023, 0.58518655, 0.14868358, 0.0022414 , 0.4465585 ,
            0.39141387, 0.05220189]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.3632 0.4109 0.3829 ... 0.4466 0.3914 0.0522
        second   (times, roi) float64 0.7835 0.5817 0.5001 ... 0.3328 0.2526 0.4402
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.134 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
