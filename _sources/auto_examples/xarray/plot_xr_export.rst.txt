.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.77219822, 0.1202463 , 0.73729389, 0.61435626, 0.71940341,
            0.27614965, 0.27376497],
           [0.21934109, 0.25485763, 0.47351702, 0.89643915, 0.0497707 ,
            0.19198168, 0.34003131],
           [0.2758068 , 0.12435814, 0.74459324, 0.40183281, 0.09596797,
            0.45683018, 0.03194636],
           [0.81879537, 0.45592531, 0.8242012 , 0.14667891, 0.61896364,
            0.87146878, 0.94903501],
           [0.66843502, 0.22978748, 0.84943336, 0.3996921 , 0.48168847,
            0.73393448, 0.50333178],
           [0.82773311, 0.23577533, 0.96027557, 0.53799594, 0.50131623,
            0.08289221, 0.80785594],
           [0.75637569, 0.68857067, 0.25237117, 0.81257966, 0.88093973,
            0.76729604, 0.50178407],
           [0.42508462, 0.36104882, 0.8947525 , 0.04288071, 0.19421644,
            0.90623073, 0.9060636 ],
           [0.63126027, 0.55393172, 0.77461508, 0.92947296, 0.91165542,
            0.62298276, 0.28667442],
           [0.83448197, 0.69406276, 0.34676299, 0.29150687, 0.08878604,
            0.52100358, 0.47835138],
    ...
           [0.70996803, 0.01850948, 0.33760194, 0.48600257, 0.41384302,
            0.58614658, 0.05111554],
           [0.6905063 , 0.2285711 , 0.91941167, 0.82108199, 0.80833053,
            0.87163231, 0.51393929],
           [0.05938394, 0.42538292, 0.89471701, 0.77419906, 0.50276827,
            0.97831878, 0.56698391],
           [0.09506546, 0.78932688, 0.58498491, 0.26885708, 0.16132509,
            0.25096594, 0.32997001],
           [0.03799283, 0.61172702, 0.03137348, 0.34522182, 0.45303153,
            0.52106885, 0.88138739],
           [0.36371753, 0.1965715 , 0.09626697, 0.62978486, 0.63943313,
            0.31688777, 0.83984967],
           [0.4095423 , 0.80203367, 0.17290885, 0.78511725, 0.68620864,
            0.15274684, 0.92761123],
           [0.54279782, 0.98626723, 0.29314253, 0.96361832, 0.97920329,
            0.18404524, 0.24223003],
           [0.42696935, 0.23600736, 0.74800606, 0.42074658, 0.97364884,
            0.91790653, 0.72015047],
           [0.87229843, 0.37154925, 0.65849203, 0.94246829, 0.79142919,
            0.23571389, 0.1032289 ]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.7722 0.1202 0.7373 ... 0.7914 0.2357 0.1032
        second   (times, roi) float64 0.1306 0.2211 0.6012 ... 0.02156 0.01603
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.129 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
