.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.68425163, 0.1809006 , 0.73215116, 0.43189625, 0.83375786,
            0.32216651, 0.99647606],
           [0.88742537, 0.93614045, 0.29459812, 0.17327075, 0.05653803,
            0.48836171, 0.17803991],
           [0.36036722, 0.4249157 , 0.16843408, 0.44612009, 0.42438554,
            0.97864781, 0.91765462],
           [0.2264916 , 0.15666703, 0.4367549 , 0.84453009, 0.17336652,
            0.00926515, 0.67672314],
           [0.15766679, 0.0776703 , 0.59192186, 0.2265785 , 0.18460876,
            0.19202851, 0.7664688 ],
           [0.489198  , 0.96152861, 0.93866543, 0.63908991, 0.21068454,
            0.32519375, 0.02983473],
           [0.95495096, 0.27001918, 0.93552667, 0.35836477, 0.73928375,
            0.24721519, 0.36210342],
           [0.74009213, 0.11456136, 0.39235759, 0.43697615, 0.28577092,
            0.16766604, 0.66771393],
           [0.91029977, 0.24079944, 0.00735604, 0.97464631, 0.48518001,
            0.7099028 , 0.33517756],
           [0.66965786, 0.85830047, 0.08926495, 0.41571207, 0.64527928,
            0.97999795, 0.66336626],
    ...
           [0.48844475, 0.55339139, 0.68123667, 0.32168124, 0.65975433,
            0.58620845, 0.17106057],
           [0.16714037, 0.90252873, 0.78499239, 0.52001744, 0.96168762,
            0.43652621, 0.14131351],
           [0.72605712, 0.90338874, 0.83399168, 0.57791916, 0.56454306,
            0.44702835, 0.53398972],
           [0.46814572, 0.6298977 , 0.37879702, 0.69717923, 0.64746697,
            0.75841701, 0.37499859],
           [0.57224002, 0.73615904, 0.84658972, 0.22351052, 0.22652868,
            0.665911  , 0.8277927 ],
           [0.02569512, 0.51316791, 0.5384505 , 0.0162859 , 0.73290998,
            0.69532881, 0.15949378],
           [0.98455602, 0.58555635, 0.25272572, 0.81612184, 0.04062227,
            0.61281768, 0.00843437],
           [0.5973385 , 0.11071068, 0.1959492 , 0.18848496, 0.58846936,
            0.99582489, 0.43591732],
           [0.50134014, 0.68050709, 0.7956387 , 0.61378131, 0.43362165,
            0.48174254, 0.08345231],
           [0.95864536, 0.61887606, 0.01380933, 0.69283283, 0.19523612,
            0.22440555, 0.89247465]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.6843 0.1809 0.7322 ... 0.1952 0.2244 0.8925
        second   (times, roi) float64 0.9022 0.007793 0.3997 ... 0.8983 0.2707
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.120 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
