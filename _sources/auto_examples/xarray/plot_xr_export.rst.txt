.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.69611145, 0.29627401, 0.4063482 , 0.20841729, 0.98808803,
            0.13586176, 0.96621321],
           [0.49239125, 0.4637421 , 0.23617522, 0.97539417, 0.89562918,
            0.60722905, 0.43764513],
           [0.78195239, 0.02716012, 0.57262898, 0.46522468, 0.79143434,
            0.5619986 , 0.47717443],
           [0.86495975, 0.21335621, 0.07362485, 0.26049879, 0.90657552,
            0.14228146, 0.59482237],
           [0.9599458 , 0.02557667, 0.11632383, 0.37712687, 0.97969239,
            0.70960357, 0.88315169],
           [0.02724927, 0.59429256, 0.84573344, 0.84821443, 0.46445572,
            0.25650681, 0.85765958],
           [0.65074072, 0.8475095 , 0.67430764, 0.09920306, 0.17323408,
            0.58603044, 0.22772031],
           [0.62448684, 0.05238822, 0.72653424, 0.97911654, 0.10326081,
            0.36535943, 0.55843996],
           [0.94310184, 0.59291452, 0.53007269, 0.4281794 , 0.04324056,
            0.39719615, 0.64265813],
           [0.25907537, 0.57199034, 0.78874092, 0.93674277, 0.67666618,
            0.33642666, 0.16387587],
    ...
           [0.06825163, 0.58383036, 0.32896298, 0.3777027 , 0.07427311,
            0.57608998, 0.05510688],
           [0.46983743, 0.36341642, 0.61930228, 0.32998861, 0.67805338,
            0.90267478, 0.63409302],
           [0.42133156, 0.40405955, 0.10592268, 0.6877132 , 0.01979857,
            0.89396048, 0.0078946 ],
           [0.32026802, 0.39020605, 0.96468136, 0.55085257, 0.50921449,
            0.21039776, 0.92526605],
           [0.3510196 , 0.41025678, 0.60207091, 0.43719763, 0.65517506,
            0.93314827, 0.5150395 ],
           [0.08344364, 0.00264135, 0.70863681, 0.93453523, 0.07127072,
            0.92345405, 0.42891955],
           [0.62099678, 0.78316321, 0.18349804, 0.1909673 , 0.05347944,
            0.45143542, 0.22060009],
           [0.40890099, 0.11805188, 0.36657861, 0.00294644, 0.98677772,
            0.03104764, 0.68932226],
           [0.88492331, 0.80478091, 0.65793572, 0.19811749, 0.15701466,
            0.14742351, 0.70777247],
           [0.83299339, 0.98608885, 0.13541369, 0.52358775, 0.922208  ,
            0.49921577, 0.54032693]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.6961 0.2963 0.4063 ... 0.9222 0.4992 0.5403
        second   (times, roi) float64 0.04885 0.9142 0.07835 ... 0.5609 0.04424
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.127 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
