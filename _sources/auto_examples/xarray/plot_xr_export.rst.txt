.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.70912608, 0.62875253, 0.29837198, 0.97046963, 0.82209377,
            0.8024994 , 0.32923949],
           [0.39057409, 0.82708539, 0.80680173, 0.72921851, 0.92820262,
            0.40463361, 0.78496449],
           [0.2857039 , 0.32015571, 0.72535499, 0.35306467, 0.41519719,
            0.05220881, 0.53989507],
           [0.96385642, 0.64975511, 0.70530566, 0.56803149, 0.4162598 ,
            0.49650766, 0.17374851],
           [0.44082159, 0.83118763, 0.07938729, 0.51560112, 0.44117863,
            0.32950205, 0.49696027],
           [0.84338324, 0.10683039, 0.54572907, 0.39934814, 0.96175229,
            0.87268405, 0.52020497],
           [0.95466679, 0.08071597, 0.28277678, 0.11174313, 0.04327465,
            0.48368699, 0.5216077 ],
           [0.6104208 , 0.24923302, 0.51430909, 0.90031714, 0.15606616,
            0.89209773, 0.5775638 ],
           [0.74925776, 0.44858482, 0.7867179 , 0.77498578, 0.08557821,
            0.32655444, 0.89474825],
           [0.24843777, 0.54394084, 0.0328295 , 0.32622635, 0.86065083,
            0.37706538, 0.58582569],
    ...
           [0.36100172, 0.89800235, 0.19728499, 0.08801854, 0.29766244,
            0.81593234, 0.21221387],
           [0.1211983 , 0.33711762, 0.45800597, 0.8397215 , 0.46844371,
            0.86546435, 0.08987229],
           [0.43152254, 0.1828858 , 0.22495217, 0.62244825, 0.09446574,
            0.12405121, 0.47783008],
           [0.47037254, 0.60677149, 0.32395475, 0.48801881, 0.57145008,
            0.91481808, 0.46775586],
           [0.04677563, 0.66404545, 0.47758839, 0.75014131, 0.32721912,
            0.56376779, 0.1144023 ],
           [0.01413894, 0.41016348, 0.67876381, 0.62198224, 0.77062233,
            0.03397477, 0.38443694],
           [0.04571318, 0.30414198, 0.24917142, 0.96117812, 0.35015542,
            0.76663672, 0.13216693],
           [0.06896273, 0.78866103, 0.61735391, 0.95290095, 0.63366145,
            0.21692761, 0.05147161],
           [0.02194585, 0.95045728, 0.20945047, 0.37833928, 0.77523433,
            0.75588602, 0.97233195],
           [0.37106089, 0.65030299, 0.17507182, 0.57730417, 0.4109387 ,
            0.46671693, 0.67027224]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.7091 0.6288 0.2984 ... 0.4109 0.4667 0.6703
        second   (times, roi) float64 0.4725 0.5639 0.06087 ... 0.4572 0.8183 0.2432
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.157 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
