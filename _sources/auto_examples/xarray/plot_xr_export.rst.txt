.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.8117669 , 0.0421014 , 0.51169678, 0.76469278, 0.69353617,
            0.07018929, 0.97006515],
           [0.88122921, 0.78901392, 0.40791959, 0.5586498 , 0.26933027,
            0.07100418, 0.5264838 ],
           [0.54396893, 0.25361156, 0.86691615, 0.6754696 , 0.31371585,
            0.37429125, 0.16537283],
           [0.45884251, 0.01511262, 0.95266421, 0.30166377, 0.50362392,
            0.38692764, 0.97732764],
           [0.60028523, 0.93467285, 0.08321833, 0.87118113, 0.70695164,
            0.51915256, 0.81422573],
           [0.07093126, 0.8151388 , 0.22178197, 0.38079093, 0.31105071,
            0.99945908, 0.38346748],
           [0.600469  , 0.18173876, 0.469933  , 0.5753306 , 0.80891675,
            0.32537216, 0.98162727],
           [0.64538126, 0.47310298, 0.63830724, 0.71943303, 0.27676627,
            0.76568756, 0.61758114],
           [0.39356094, 0.06297569, 0.63761117, 0.187469  , 0.32292993,
            0.0075783 , 0.5480767 ],
           [0.45665379, 0.14271549, 0.64578021, 0.47732838, 0.10905315,
            0.65491671, 0.13078144],
    ...
           [0.2237675 , 0.10310879, 0.85526502, 0.70916635, 0.02694031,
            0.86198887, 0.69180851],
           [0.29905195, 0.26722961, 0.71926228, 0.19044469, 0.73842885,
            0.00792799, 0.44462281],
           [0.93431578, 0.18685585, 0.42313066, 0.49138219, 0.90608352,
            0.09120717, 0.70952028],
           [0.49387993, 0.05206338, 0.40075544, 0.28740842, 0.44218455,
            0.21435152, 0.72620051],
           [0.88767953, 0.35658187, 0.63638427, 0.91035527, 0.47970366,
            0.08864488, 0.44214562],
           [0.80186637, 0.63012143, 0.9729913 , 0.16001573, 0.11557648,
            0.22823067, 0.05791841],
           [0.91529562, 0.35015087, 0.18561997, 0.15218561, 0.258432  ,
            0.57709167, 0.551506  ],
           [0.49911049, 0.20314069, 0.07661327, 0.04603441, 0.04724333,
            0.42326806, 0.1973169 ],
           [0.01476917, 0.85975309, 0.77400798, 0.794662  , 0.90469356,
            0.82830036, 0.64851325],
           [0.95544955, 0.63122436, 0.01154647, 0.59761634, 0.20625738,
            0.80634904, 0.48747125]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.8118 0.0421 0.5117 ... 0.2063 0.8063 0.4875
        second   (times, roi) float64 0.9375 0.8214 0.9884 ... 0.779 0.7342 0.5466
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.127 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
