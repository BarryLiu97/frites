.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.94651469, 0.07764469, 0.08428989, 0.34837809, 0.13526737,
            0.01281206, 0.98484027],
           [0.4027816 , 0.00119412, 0.9897065 , 0.44897853, 0.3890869 ,
            0.99913286, 0.18908483],
           [0.09773201, 0.45805202, 0.58056399, 0.23100925, 0.24248287,
            0.18642132, 0.64907492],
           [0.35640841, 0.23575336, 0.10349401, 0.6981091 , 0.52622403,
            0.81667878, 0.89983733],
           [0.20895018, 0.54015607, 0.14040862, 0.71223691, 0.67876284,
            0.52937552, 0.23146608],
           [0.99607061, 0.39454368, 0.6691233 , 0.61511616, 0.21399844,
            0.91235157, 0.75257678],
           [0.34018043, 0.8829429 , 0.38660208, 0.98406728, 0.2489052 ,
            0.74181933, 0.49822144],
           [0.54262523, 0.10804814, 0.07435086, 0.23758329, 0.77116213,
            0.58449657, 0.72686847],
           [0.80465529, 0.54872411, 0.38767722, 0.75783335, 0.50582435,
            0.50786713, 0.61986435],
           [0.55017605, 0.59468442, 0.48808554, 0.96514089, 0.72450241,
            0.6710751 , 0.91715822],
    ...
           [0.49806904, 0.66114714, 0.30926212, 0.69215198, 0.15529276,
            0.41210969, 0.86855985],
           [0.78169088, 0.83117801, 0.59906022, 0.50766542, 0.73305905,
            0.19705299, 0.02204204],
           [0.77030103, 0.82126219, 0.56092884, 0.23979523, 0.67688492,
            0.3299931 , 0.9341919 ],
           [0.96238604, 0.75106935, 0.80528302, 0.75109565, 0.86315218,
            0.32710095, 0.43012645],
           [0.13607046, 0.47560968, 0.72898857, 0.40846378, 0.47210084,
            0.59277928, 0.26751743],
           [0.1972938 , 0.57523654, 0.02898398, 0.35007203, 0.71527616,
            0.74922536, 0.88179774],
           [0.07159324, 0.87856163, 0.33006152, 0.14614566, 0.2505465 ,
            0.2547446 , 0.98048832],
           [0.81177506, 0.85682777, 0.55832916, 0.38375508, 0.74346688,
            0.42177003, 0.60609057],
           [0.07078442, 0.55454616, 0.66609135, 0.82757789, 0.21905073,
            0.65675646, 0.59710165],
           [0.1704346 , 0.8088258 , 0.31885956, 0.10723292, 0.46371659,
            0.09562626, 0.3589562 ]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.9465 0.07764 0.08429 ... 0.09563 0.359
        second   (times, roi) float64 0.5307 0.5527 0.3229 ... 0.4616 0.7672 0.9007
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.120 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
