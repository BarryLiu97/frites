.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.35992784, 0.81141892, 0.44413235, 0.32664322, 0.1237152 ,
            0.61011732, 0.18279238],
           [0.68768461, 0.96389953, 0.49631927, 0.73530148, 0.01917433,
            0.20029384, 0.60805518],
           [0.05757127, 0.52548989, 0.57933391, 0.62733335, 0.44344725,
            0.55588165, 0.15218905],
           [0.56619646, 0.97341991, 0.50003165, 0.29998404, 0.95765554,
            0.69376597, 0.78249025],
           [0.99266627, 0.72628108, 0.41373075, 0.21086954, 0.47092618,
            0.13687576, 0.6582452 ],
           [0.29491143, 0.5539991 , 0.34656189, 0.46355797, 0.16398335,
            0.0490598 , 0.50510834],
           [0.59540891, 0.418027  , 0.44116037, 0.62001293, 0.21421043,
            0.37775257, 0.00514659],
           [0.44636844, 0.65040913, 0.20619585, 0.5844875 , 0.90807334,
            0.14247038, 0.23083874],
           [0.49540373, 0.21925863, 0.94333442, 0.11021709, 0.984876  ,
            0.50767673, 0.26198257],
           [0.19087579, 0.68292867, 0.90471926, 0.43429741, 0.1316599 ,
            0.92270513, 0.60479502],
    ...
           [0.27951327, 0.59723571, 0.6766359 , 0.98502174, 0.14660938,
            0.32647263, 0.60892551],
           [0.24861747, 0.26363962, 0.45568047, 0.24090085, 0.33328065,
            0.00665506, 0.49395914],
           [0.62731083, 0.2173462 , 0.88202714, 0.87608042, 0.83894966,
            0.46913579, 0.08267951],
           [0.57510419, 0.43869879, 0.04259504, 0.67857038, 0.86591833,
            0.37478958, 0.55555426],
           [0.13186557, 0.0103627 , 0.74665966, 0.64302765, 0.63666466,
            0.20592512, 0.75758333],
           [0.18969296, 0.02233949, 0.23492881, 0.67792254, 0.67235026,
            0.94590296, 0.91561503],
           [0.57646075, 0.90156025, 0.89659991, 0.24877138, 0.79396238,
            0.06103857, 0.26691857],
           [0.78535278, 0.92579068, 0.17515999, 0.68951903, 0.04775128,
            0.11248341, 0.20341252],
           [0.11539823, 0.33110787, 0.66249074, 0.08098258, 0.02297087,
            0.97412501, 0.95664728],
           [0.54784349, 0.50462953, 0.96384452, 0.57100357, 0.38821842,
            0.0263851 , 0.56432543]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.3599 0.8114 0.4441 ... 0.3882 0.02639 0.5643
        second   (times, roi) float64 0.5315 0.0373 0.8691 ... 0.3124 0.5639 0.4322
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.179 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
