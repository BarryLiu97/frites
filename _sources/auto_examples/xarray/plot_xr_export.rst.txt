.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.42484212, 0.19595293, 0.9430668 , 0.99013839, 0.60053627,
            0.70606488, 0.72447908],
           [0.39719833, 0.70490994, 0.52548322, 0.04778693, 0.96376541,
            0.10777306, 0.052879  ],
           [0.76888392, 0.53888042, 0.0675153 , 0.20449561, 0.97349323,
            0.54467512, 0.69674621],
           [0.40080589, 0.65925849, 0.40102883, 0.16774521, 0.53598251,
            0.17776652, 0.53931729],
           [0.57305253, 0.24814566, 0.04478355, 0.18377932, 0.84482841,
            0.96722538, 0.82021804],
           [0.71936228, 0.09082274, 0.13136029, 0.90169022, 0.95614799,
            0.70582403, 0.52182463],
           [0.96641204, 0.9692539 , 0.56743866, 0.16585768, 0.04425068,
            0.82317347, 0.49078288],
           [0.4629837 , 0.2579749 , 0.31212331, 0.78000922, 0.02819872,
            0.23411448, 0.8776922 ],
           [0.03691989, 0.77610583, 0.07462266, 0.93790473, 0.35975181,
            0.86112709, 0.42691885],
           [0.77065683, 0.94915157, 0.8424596 , 0.75505311, 0.30921957,
            0.05938901, 0.77307922],
    ...
           [0.31880409, 0.36305856, 0.88675002, 0.23877726, 0.55303214,
            0.17767554, 0.37064851],
           [0.6362055 , 0.84516701, 0.42786634, 0.50889009, 0.78169179,
            0.14347595, 0.95649513],
           [0.29108954, 0.01896528, 0.68329731, 0.21218212, 0.59511299,
            0.09316984, 0.12142187],
           [0.41233144, 0.24387463, 0.17056232, 0.52961668, 0.77862841,
            0.811318  , 0.48935488],
           [0.9984913 , 0.75919921, 0.2538444 , 0.96583153, 0.7660833 ,
            0.53193144, 0.51864082],
           [0.68131884, 0.03319318, 0.20104167, 0.001584  , 0.2234977 ,
            0.14290425, 0.5141108 ],
           [0.46112589, 0.64250431, 0.35513319, 0.45171987, 0.10922849,
            0.65141143, 0.14918845],
           [0.47507003, 0.46334591, 0.22411106, 0.42507134, 0.48633262,
            0.40550932, 0.7891363 ],
           [0.68353081, 0.42117026, 0.01444475, 0.27478449, 0.74902635,
            0.23997677, 0.6892449 ],
           [0.54041747, 0.32304509, 0.25060511, 0.31124347, 0.32322178,
            0.32381003, 0.24704174]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.4248 0.196 0.9431 ... 0.3232 0.3238 0.247
        second   (times, roi) float64 0.5153 0.3019 0.9859 ... 0.9354 0.6557 0.3991
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.153 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
