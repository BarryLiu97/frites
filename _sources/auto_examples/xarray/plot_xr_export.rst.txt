.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.43897242, 0.73511467, 0.09973452, 0.33175949, 0.62415401,
            0.35376414, 0.77227451],
           [0.68847831, 0.02779141, 0.93431281, 0.62678126, 0.34461534,
            0.37543241, 0.83487951],
           [0.92573669, 0.90627002, 0.61053888, 0.9869011 , 0.58134467,
            0.45759429, 0.2965627 ],
           [0.87787562, 0.17802025, 0.27277278, 0.52391614, 0.33776163,
            0.26043247, 0.51957838],
           [0.33333471, 0.63300285, 0.59665417, 0.79257587, 0.05300649,
            0.93665583, 0.32097075],
           [0.89658983, 0.71796179, 0.72382751, 0.5279153 , 0.49974134,
            0.56572799, 0.03620229],
           [0.91138968, 0.18364777, 0.90778124, 0.63457588, 0.67967076,
            0.54226701, 0.41907033],
           [0.80018336, 0.0558735 , 0.65265452, 0.23534484, 0.22028296,
            0.32950882, 0.12967423],
           [0.14658065, 0.3055084 , 0.80304548, 0.17907806, 0.1581643 ,
            0.12920626, 0.29030189],
           [0.78609253, 0.43370328, 0.36094956, 0.18724936, 0.10378186,
            0.32241725, 0.34759508],
    ...
           [0.23967159, 0.67422044, 0.19138765, 0.99251609, 0.42377592,
            0.01816231, 0.68101344],
           [0.99206585, 0.49294611, 0.9270207 , 0.29893969, 0.27533619,
            0.37488688, 0.53073786],
           [0.45532133, 0.07639903, 0.53720587, 0.87540031, 0.3624912 ,
            0.71404502, 0.37883461],
           [0.09101702, 0.9246156 , 0.21438155, 0.8557077 , 0.04534975,
            0.69406783, 0.94751845],
           [0.76029655, 0.28688711, 0.99333192, 0.84959422, 0.68949116,
            0.18112355, 0.74794698],
           [0.8822218 , 0.42420394, 0.34043244, 0.93706384, 0.05162308,
            0.95225004, 0.18232647],
           [0.00338492, 0.99467487, 0.21056686, 0.6412417 , 0.84476245,
            0.68931071, 0.74430178],
           [0.75970785, 0.26855358, 0.51204663, 0.22539784, 0.21284094,
            0.56661476, 0.12180319],
           [0.18307701, 0.31909664, 0.52404984, 0.56653414, 0.51667236,
            0.2082206 , 0.54289646],
           [0.00941966, 0.32875654, 0.41442039, 0.89040493, 0.43622599,
            0.72464858, 0.32049022]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.439 0.7351 0.09973 ... 0.4362 0.7246 0.3205
        second   (times, roi) float64 0.7774 0.6974 0.677 ... 0.09136 0.5118 0.9248
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.137 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
