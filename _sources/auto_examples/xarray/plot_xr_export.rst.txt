.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.41090506, 0.11969791, 0.42824507, 0.37935665, 0.61228137,
            0.61211325, 0.27884143],
           [0.88490257, 0.64885899, 0.84249163, 0.81341931, 0.59975887,
            0.66624708, 0.8331398 ],
           [0.24128966, 0.73044232, 0.87619258, 0.07676299, 0.28842548,
            0.11502075, 0.40997721],
           [0.34897818, 0.62778317, 0.96778565, 0.81475689, 0.26984772,
            0.0352735 , 0.40991347],
           [0.04000273, 0.99853284, 0.18556012, 0.15206289, 0.11885597,
            0.81374653, 0.89220922],
           [0.74219963, 0.38862669, 0.35216547, 0.58939987, 0.90544682,
            0.13622658, 0.68255021],
           [0.43403754, 0.91123281, 0.4013814 , 0.5626721 , 0.16514478,
            0.04636113, 0.23066892],
           [0.36762845, 0.63971918, 0.14986904, 0.26305285, 0.40880993,
            0.81039094, 0.61103659],
           [0.00177823, 0.88134781, 0.22804841, 0.09419204, 0.34024025,
            0.49579641, 0.32056659],
           [0.35125388, 0.87572873, 0.14963208, 0.21360964, 0.20607586,
            0.96680922, 0.80611036],
    ...
           [0.38272047, 0.00189966, 0.62843177, 0.20170121, 0.82903861,
            0.20792044, 0.65071424],
           [0.40137749, 0.38140197, 0.00551996, 0.46040069, 0.45256634,
            0.05581958, 0.66179813],
           [0.97555782, 0.80373676, 0.29646906, 0.37929215, 0.94652238,
            0.35630386, 0.51586738],
           [0.59907192, 0.67294745, 0.30262927, 0.835369  , 0.27668107,
            0.79917337, 0.15730536],
           [0.03775488, 0.32406974, 0.44121773, 0.02232267, 0.68970435,
            0.44512098, 0.85402649],
           [0.45174751, 0.60393707, 0.17402988, 0.23820807, 0.48921216,
            0.89134044, 0.19667484],
           [0.59225243, 0.33019551, 0.71075547, 0.2708314 , 0.5729382 ,
            0.59399282, 0.47671942],
           [0.66354171, 0.52341504, 0.50863737, 0.00935147, 0.74482902,
            0.36158522, 0.40447138],
           [0.22340648, 0.71518802, 0.13756973, 0.20619788, 0.41584078,
            0.67428133, 0.76909041],
           [0.43248508, 0.53759753, 0.15283154, 0.33580581, 0.25403701,
            0.85084398, 0.0598982 ]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.4109 0.1197 0.4282 ... 0.254 0.8508 0.0599
        second   (times, roi) float64 0.7804 0.1284 0.3802 ... 0.9323 0.5998 0.4907
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.113 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
