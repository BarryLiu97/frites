.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.23871658, 0.22878685, 0.82962741, 0.4441322 , 0.36694041,
            0.51203492, 0.41099341],
           [0.53550227, 0.775764  , 0.17585224, 0.33370525, 0.72458896,
            0.89923073, 0.48035267],
           [0.73452942, 0.5885364 , 0.02082866, 0.12171807, 0.23343851,
            0.21268234, 0.78386214],
           [0.76646365, 0.28076952, 0.174178  , 0.43111242, 0.33116741,
            0.97200516, 0.58635271],
           [0.22220508, 0.01190806, 0.96048621, 0.28474578, 0.40212258,
            0.32874979, 0.40715713],
           [0.01015696, 0.38922056, 0.79681601, 0.74824182, 0.64321102,
            0.37721645, 0.57484737],
           [0.04586131, 0.39545583, 0.71870413, 0.86171232, 0.52621297,
            0.40847456, 0.29188735],
           [0.09558436, 0.31908737, 0.37950332, 0.85327156, 0.60625541,
            0.34487775, 0.66562193],
           [0.72842227, 0.66896252, 0.96383101, 0.78121112, 0.42933166,
            0.95067544, 0.63060699],
           [0.35182797, 0.06467687, 0.06332414, 0.28426287, 0.3215477 ,
            0.23287068, 0.60817403],
    ...
           [0.16991932, 0.65730993, 0.5757371 , 0.24982081, 0.45364588,
            0.96440985, 0.9288847 ],
           [0.89980349, 0.12150659, 0.03808834, 0.64615163, 0.93075631,
            0.4850527 , 0.7041436 ],
           [0.66257039, 0.70622015, 0.94226041, 0.17189403, 0.30044238,
            0.6874795 , 0.08813008],
           [0.73054586, 0.57936975, 0.36403712, 0.52996049, 0.55571817,
            0.5630826 , 0.13050567],
           [0.3072886 , 0.17584616, 0.87116268, 0.83037995, 0.98385221,
            0.47052175, 0.00563054],
           [0.11760192, 0.88554854, 0.4243388 , 0.32258717, 0.3863221 ,
            0.37886347, 0.23853999],
           [0.81650388, 0.88744899, 0.55339697, 0.38069255, 0.82423446,
            0.14957149, 0.97440204],
           [0.05085488, 0.11106627, 0.55996876, 0.44913794, 0.38723751,
            0.28355636, 0.1783332 ],
           [0.72864983, 0.91909356, 0.59490297, 0.44925131, 0.0320393 ,
            0.02644057, 0.87526746],
           [0.45958822, 0.76254824, 0.02223738, 0.68943053, 0.89290673,
            0.84654391, 0.02143696]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.2387 0.2288 0.8296 ... 0.8929 0.8465 0.02144
        second   (times, roi) float64 0.1909 0.6131 0.2421 ... 0.8128 0.3905 0.2025
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.124 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
