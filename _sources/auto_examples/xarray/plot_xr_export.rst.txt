.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.94030166, 0.06000119, 0.26427265, 0.92364139, 0.61487266,
            0.48678189, 0.103165  ],
           [0.38918809, 0.48506646, 0.64131778, 0.57295264, 0.68981806,
            0.37501949, 0.80729018],
           [0.02579655, 0.16602529, 0.4354591 , 0.46638726, 0.18854654,
            0.3897049 , 0.02363309],
           [0.8848962 , 0.19269366, 0.89305836, 0.43345993, 0.57889323,
            0.83105446, 0.64927326],
           [0.19628223, 0.97546476, 0.60263141, 0.91587431, 0.24543688,
            0.51907504, 0.81903998],
           [0.22284692, 0.51217464, 0.04450078, 0.37689971, 0.70572421,
            0.23511001, 0.80999317],
           [0.69638303, 0.62150896, 0.95438962, 0.61915097, 0.94704324,
            0.06349627, 0.6861185 ],
           [0.29072297, 0.52390784, 0.04116402, 0.89433485, 0.325179  ,
            0.90435173, 0.08555217],
           [0.92543264, 0.82208402, 0.7331106 , 0.82699617, 0.20053837,
            0.96222304, 0.51199757],
           [0.15303921, 0.43800346, 0.55449478, 0.25838424, 0.47184892,
            0.78304945, 0.24276475],
    ...
           [0.25792093, 0.61591372, 0.74574321, 0.44451735, 0.62791306,
            0.46205244, 0.77570475],
           [0.06387451, 0.0362645 , 0.83301498, 0.66621457, 0.6235315 ,
            0.32979482, 0.27287804],
           [0.76430788, 0.9328749 , 0.12615555, 0.78485035, 0.94520704,
            0.00866083, 0.93653415],
           [0.18282764, 0.07964815, 0.29802125, 0.20125247, 0.29838161,
            0.83449376, 0.6657097 ],
           [0.8164651 , 0.52725093, 0.3143588 , 0.53879204, 0.49569453,
            0.93878342, 0.52384444],
           [0.12542576, 0.51086647, 0.62669707, 0.12472517, 0.62857976,
            0.44504832, 0.33135554],
           [0.77730073, 0.93699746, 0.47283671, 0.88179298, 0.1476029 ,
            0.88092622, 0.30506585],
           [0.37723702, 0.34337625, 0.52560738, 0.70898776, 0.59093326,
            0.60732489, 0.64230617],
           [0.6221759 , 0.56076776, 0.51684138, 0.84732659, 0.45159863,
            0.27969118, 0.92371801],
           [0.30769058, 0.11130062, 0.8267548 , 0.40280739, 0.94079767,
            0.45879395, 0.11457757]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.9403 0.06 0.2643 ... 0.9408 0.4588 0.1146
        second   (times, roi) float64 0.8487 0.9056 0.02226 ... 0.3981 0.8037 0.8986
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.139 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
