.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.77776406, 0.14159288, 0.38314625, 0.90667537, 0.99941262,
            0.72314977, 0.72613843],
           [0.14113418, 0.87611334, 0.62886391, 0.40547492, 0.13212485,
            0.40468364, 0.22171831],
           [0.88484583, 0.36059312, 0.09980649, 0.91020394, 0.18905751,
            0.28446744, 0.94743314],
           [0.94279588, 0.0722131 , 0.35178795, 0.93120495, 0.76787548,
            0.38346251, 0.42592813],
           [0.75112239, 0.93817567, 0.69278073, 0.95519578, 0.74139086,
            0.29389104, 0.09080285],
           [0.61950009, 0.89919179, 0.19130227, 0.99896053, 0.40759346,
            0.04282484, 0.57668733],
           [0.29399925, 0.50833502, 0.37203665, 0.54939267, 0.06586373,
            0.51750239, 0.93671377],
           [0.33892754, 0.76918778, 0.12354294, 0.21345781, 0.63344848,
            0.00103949, 0.18434601],
           [0.93872368, 0.99959097, 0.93283692, 0.19596138, 0.08819671,
            0.26132099, 0.70299695],
           [0.40338231, 0.87808315, 0.05002922, 0.74023916, 0.15469029,
            0.74305097, 0.11902681],
    ...
           [0.34798341, 0.99060581, 0.57552556, 0.23300971, 0.41992954,
            0.66990302, 0.7398138 ],
           [0.51259881, 0.5315317 , 0.87845497, 0.90175677, 0.78241781,
            0.12312691, 0.12867059],
           [0.81346575, 0.20755377, 0.51383459, 0.44799941, 0.26672341,
            0.49391914, 0.7131125 ],
           [0.69771692, 0.13162706, 0.95472911, 0.30310837, 0.53140162,
            0.55488854, 0.33496973],
           [0.6458833 , 0.37958724, 0.51236772, 0.73304456, 0.72653179,
            0.78182314, 0.11426974],
           [0.73387837, 0.52884339, 0.50166942, 0.93502138, 0.81439576,
            0.98979144, 0.90092955],
           [0.55293972, 0.43756974, 0.34194694, 0.917544  , 0.91659981,
            0.33538882, 0.81899031],
           [0.9159059 , 0.67130567, 0.94165357, 0.35439967, 0.87054719,
            0.31342629, 0.98134526],
           [0.17045686, 0.06874992, 0.55918703, 0.84363504, 0.98174619,
            0.64570866, 0.08108909],
           [0.37713363, 0.37561472, 0.31197168, 0.64499646, 0.04333456,
            0.13179626, 0.41213161]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.7778 0.1416 0.3831 ... 0.04333 0.1318 0.4121
        second   (times, roi) float64 0.2151 0.8944 0.2379 ... 0.3286 0.9459 0.2782
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.127 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
