.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.89142288, 0.22244991, 0.39463737, 0.07786242, 0.45559737,
            0.77969951, 0.98872517],
           [0.69195759, 0.57303084, 0.86176785, 0.45271934, 0.52616418,
            0.76271809, 0.56414385],
           [0.03348351, 0.5435969 , 0.56813461, 0.1898303 , 0.75572907,
            0.15433379, 0.39492644],
           [0.50051999, 0.25948038, 0.14112374, 0.26058793, 0.6785362 ,
            0.56204518, 0.95228279],
           [0.07504009, 0.74322418, 0.45948383, 0.27936272, 0.28199762,
            0.39414795, 0.9809161 ],
           [0.13650448, 0.17265655, 0.00855787, 0.1331333 , 0.61562838,
            0.51041343, 0.55011008],
           [0.98486733, 0.57301911, 0.04226676, 0.55369795, 0.30325544,
            0.81644722, 0.58703841],
           [0.20128471, 0.56932986, 0.58675231, 0.78182172, 0.86021166,
            0.3947431 , 0.93558102],
           [0.60979371, 0.52939184, 0.8876292 , 0.50188135, 0.84364081,
            0.53115389, 0.08609635],
           [0.4111285 , 0.4977092 , 0.57815636, 0.11798891, 0.23967159,
            0.33304968, 0.58040829],
    ...
           [0.95977882, 0.77328915, 0.651799  , 0.54276074, 0.78232909,
            0.6466342 , 0.42472908],
           [0.96516118, 0.28768158, 0.40653446, 0.69553001, 0.4767112 ,
            0.25786305, 0.29348539],
           [0.7601414 , 0.74658364, 0.01523603, 0.32636713, 0.50340279,
            0.20441923, 0.27527285],
           [0.53850552, 0.73807162, 0.32432571, 0.04518844, 0.7951259 ,
            0.40577649, 0.79862522],
           [0.22824518, 0.52969383, 0.6244114 , 0.49533966, 0.27048206,
            0.14892993, 0.85157584],
           [0.30138433, 0.94437676, 0.78893471, 0.66415904, 0.39555069,
            0.74582706, 0.83473371],
           [0.8053404 , 0.8157022 , 0.26768595, 0.72657166, 0.23025601,
            0.68012632, 0.38429989],
           [0.88043714, 0.4958154 , 0.92209487, 0.4455708 , 0.08034674,
            0.93289782, 0.48045361],
           [0.46481187, 0.3166964 , 0.5444315 , 0.08508461, 0.63813336,
            0.08135117, 0.24441816],
           [0.0843461 , 0.50467646, 0.74354995, 0.33708639, 0.23538919,
            0.850479  , 0.56336515]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.8914 0.2224 0.3946 ... 0.2354 0.8505 0.5634
        second   (times, roi) float64 0.507 0.4163 0.9614 ... 0.9967 0.016 0.08158
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.121 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
