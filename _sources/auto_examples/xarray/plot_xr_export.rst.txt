.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_xarray_plot_xr_export.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_xarray_plot_xr_export.py:


Xarray : Saving the results
===========================

This example illustrates how to export and load your results. In details, we
are going to show how to save and reload a single DataArray such as a Dataset.


.. code-block:: default

    import numpy as np
    import xarray as xr
    import pandas as pd







Simulate data
-------------

lets start by creating two random spatio-temporal arrays


.. code-block:: default


    n_times = 30
    n_roi = 7
    times_vec = np.linspace(-1, 1, n_times)
    roi_vec = np.array([f"roi_{k}" for k in range(n_roi)])

    # xarray.DataArray conversion
    arr_1 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))
    arr_2 = xr.DataArray(np.random.rand(n_times, n_roi), dims=('times', 'roi'),
                         coords=(times_vec, roi_vec))

    # just add a few attributes to each array
    arr_1.attrs['desc'] = "This is my first array"
    arr_1.attrs['sf'] = 1024.
    arr_2.attrs['desc'] = "This is my second array"
    arr_2.attrs['sf'] = 512.

    # note that you can also concatenate DataArray
    arr_cat = xr.concat([arr_1, arr_2], 'roi')







Export and load a single DataArray
----------------------------------

now we're going to save a single array and then reload it


.. code-block:: default


    # export a single array
    arr_1.to_netcdf("first_array.nc")

    # delete it
    del arr_1

    # reload it
    arr_1 = xr.load_dataarray("first_array.nc")
    print(arr_1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.DataArray (times: 30, roi: 7)>
    array([[0.9357545 , 0.68782883, 0.55976942, 0.66430048, 0.38371568,
            0.7943435 , 0.53629784],
           [0.62269626, 0.17660434, 0.4438194 , 0.78418317, 0.01259474,
            0.0364127 , 0.5174162 ],
           [0.47951644, 0.17131661, 0.2516701 , 0.07463369, 0.69418742,
            0.01086065, 0.45243629],
           [0.10814853, 0.08333495, 0.03521674, 0.98940069, 0.95108554,
            0.56152671, 0.05321045],
           [0.90859406, 0.08456943, 0.31314397, 0.3932463 , 0.06008239,
            0.23882791, 0.3756123 ],
           [0.5289324 , 0.13450189, 0.64319842, 0.87572548, 0.72090642,
            0.46177281, 0.61369614],
           [0.79915096, 0.71989021, 0.38137167, 0.19204363, 0.91342326,
            0.13207465, 0.81244483],
           [0.11760075, 0.5316438 , 0.0396518 , 0.46004615, 0.07484551,
            0.4603333 , 0.43123746],
           [0.29477492, 0.0648084 , 0.53445   , 0.68276883, 0.59640993,
            0.30132207, 0.90939437],
           [0.45867951, 0.60058115, 0.49690279, 0.92663925, 0.44728886,
            0.70734248, 0.85524954],
    ...
           [0.21910868, 0.41497705, 0.22721818, 0.23624532, 0.06957495,
            0.47696226, 0.06375991],
           [0.10148143, 0.28685952, 0.91093017, 0.81266419, 0.96004801,
            0.91955818, 0.8520133 ],
           [0.04597602, 0.87640679, 0.17587201, 0.96178754, 0.81518359,
            0.35292344, 0.82023674],
           [0.55547897, 0.64379595, 0.11831927, 0.02973773, 0.8870201 ,
            0.94924466, 0.60752056],
           [0.69464962, 0.34687191, 0.22737014, 0.17166811, 0.23548459,
            0.33941038, 0.46657016],
           [0.47524406, 0.0477597 , 0.51220282, 0.02238452, 0.96004015,
            0.60543384, 0.3650539 ],
           [0.62270034, 0.99564751, 0.6855662 , 0.88830651, 0.07118208,
            0.53441482, 0.01052322],
           [0.46938542, 0.95926989, 0.24895938, 0.62149623, 0.89967555,
            0.82084322, 0.8214566 ],
           [0.21166395, 0.64793412, 0.5105331 , 0.54967485, 0.10505278,
            0.34735779, 0.46274163],
           [0.13420516, 0.97400507, 0.81067972, 0.63881605, 0.45055144,
            0.25570755, 0.29515934]])
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Attributes:
        desc:     This is my first array
        sf:       1024.0



Export and load multiple DataArrays
-----------------------------------

it's also possible to export and reload multiple DataArrays at once. To do
it, you can use a Dataset which is a container of DataArrays


.. code-block:: default


    # create a dataset
    dat = xr.Dataset({'first': arr_1, 'second': arr_2})

    # you can also slice the dataset and also add attributes to it
    dat.attrs['desc'] = 'This is my dataset'
    dat.attrs['sf'] = 256.

    # export your dataset
    dat.to_netcdf('full_dataset.nc')

    # delete it
    del dat

    # reload it
    dat = xr.load_dataset("full_dataset.nc")
    print(dat)

    # finally, accessing array of a dataset is similar of using dictionary
    arr_1 = dat['first']
    arr_2 = dat['second']




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <xarray.Dataset>
    Dimensions:  (roi: 7, times: 30)
    Coordinates:
      * times    (times) float64 -1.0 -0.931 -0.8621 -0.7931 ... 0.8621 0.931 1.0
      * roi      (roi) object 'roi_0' 'roi_1' 'roi_2' ... 'roi_4' 'roi_5' 'roi_6'
    Data variables:
        first    (times, roi) float64 0.9358 0.6878 0.5598 ... 0.4506 0.2557 0.2952
        second   (times, roi) float64 0.2694 0.7877 0.3615 ... 0.6969 0.06719 0.4211
    Attributes:
        desc:     This is my dataset
        sf:       256.0




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.126 seconds)


.. _sphx_glr_download_auto_examples_xarray_plot_xr_export.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_xr_export.py <plot_xr_export.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_xr_export.ipynb <plot_xr_export.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
