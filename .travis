language: python
sudo: false
dist: trusty
python:
    - '3.6'

cache:
  pip: true
  apt: true
  directories:
    - $HOME/.cache/pip

matrix:
  include:
    - env: TEST=standard
      os: linux
    - env: TEST=flake
      os: linux
  allow_failures:
    - env: TEST=flake


before_install:
    # Instal miniconda3 :
    - if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
        wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      else
        wget http://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
      fi;
    - bash miniconda.sh -b -p $HOME/miniconda
    - export PATH="$HOME/miniconda/bin:$PATH"
    - hash -r
    - conda config --set always_yes yes --set changeps1 no
    - conda update -q conda
    - conda info -a
    - SRC_DIR=$(pwd)


install:
    # Create the py3 environnement ;
    - conda create -q -n testenv python=$TRAVIS_PYTHON_VERSION numpy scipy pip joblib matplotlib
    - source activate testenv
    # Install dependencies :
    - if [ "${TEST}" == "standard" ] || [ "${TEST}" == "examples" ]; then
        pip install -U xlrd pillow openpyxl seaborn;
        pip install -U codecov pytest pytest-cov pytest-sugar pytest-travis-fold pytest-faulthandler;
      fi;
    - if [ "${TEST}" == "flake" ]; then
        pip install flake8 pep8-naming;
      fi;
    # ------------------- BRAINETS -------------------
    - cd ${SRC_DIR}
    - pip install -e .


script:
    - if [[ "${TEST}" == "standard" ]]; then
          pytest --verbose;
      elif [[ "${TEST}" == "flake" ]]; then
          flake8;
      fi;


notifications:
    email: false
